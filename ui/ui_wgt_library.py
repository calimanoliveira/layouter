import bpy
from bpy.types import Operator
from bpy_extras.object_utils import object_data_add
from mathutils import Vector
from math import radians


def add_wgt_position(self, context):

    verts = [
        Vector((-2.4166820367099717e-05, -55.55470275878906, 3.463220127741806e-05)),
        Vector((-4.335280895233154, -54.48719787597656, 3.463220127741806e-05)),
        Vector((-8.503946304321289, -51.3258056640625, 3.33282005158253e-05)),
        Vector((-21.262727737426758, -31.821887969970703, 3.33282005158253e-05)),
        Vector((-26.061851501464844, -26.061826705932617, 3.463220127741806e-05)),
        Vector((-31.82192611694336, -21.26271629333496, 3.3980202715611085e-05)),
        Vector((-51.32585144042969, -8.503939628601074, 3.3980202715611085e-05)),
        Vector((-54.48723602294922, -4.335268020629883, 3.365419979672879e-05)),
        Vector((-55.55472946166992, 1.5270019503077492e-05, 3.339581598993391e-05)),
        Vector((-54.48723602294922, 4.335277557373047, 3.33282005158253e-05)),
        Vector((-51.32585144042969, 8.503945350646973, 3.33282005158253e-05)),
        Vector((-31.82192611694336, 21.26274299621582, 3.33282005158253e-05)),
        Vector((-26.061851501464844, 26.061840057373047, 3.33282005158253e-05)),
        Vector((-21.262727737426758, 31.821916580200195, 3.33282005158253e-05)),
        Vector((-8.503946304321289, 51.32584762573242, 3.33282005158253e-05)),
        Vector((-4.3352742195129395, 54.487220764160156, 3.2024196116253734e-05)),
        Vector((-6.064793524274137e-06, 55.55472183227539, 3.2024196116253734e-05)),
        Vector((4.3352742195129395, 54.487220764160156, 3.2024196116253734e-05)),
        Vector((8.503948211669922, 51.32584762573242, 3.33282005158253e-05)),
        Vector((21.262720108032227, 31.821916580200195, 3.33282005158253e-05)),
        Vector((26.061845779418945, 26.061840057373047, 3.33282005158253e-05)),
        Vector((31.821924209594727, 21.262706756591797, 3.33282005158253e-05)),
        Vector((51.32583236694336, 8.503933906555176, 3.33282005158253e-05)),
        Vector((54.48720932006836, 4.335262298583984, 3.33282005158253e-05)),
        Vector((55.55466842651367, -3.4179298381786793e-05, 3.339581598993391e-05)),
        Vector((54.48716354370117, -4.335287094116211, 3.365419979672879e-05)),
        Vector((51.32577133178711, -8.503959655761719, 3.3980202715611085e-05)),
        Vector((31.821882247924805, -21.26274871826172, 3.3980202715611085e-05)),
        Vector((26.061813354492188, -26.061857223510742, 3.463220127741806e-05)),
        Vector((21.262670516967773, -31.821924209594727, 3.33282005158253e-05)),
        Vector((8.50390625, -51.32585906982422, 3.33282005158253e-05)),
        Vector((4.335236549377441, -54.487239837646484, 3.463220127741806e-05)),
    ]
    edges = [
        [1, 0],
        [2, 1],
        [3, 2],
        [4, 3],
        [5, 4],
        [6, 5],
        [7, 6],
        [8, 7],
        [9, 8],
        [10, 9],
        [11, 10],
        [12, 11],
        [13, 12],
        [14, 13],
        [15, 14],
        [16, 15],
        [17, 16],
        [18, 17],
        [19, 18],
        [20, 19],
        [21, 20],
        [22, 21],
        [23, 22],
        [24, 23],
        [25, 24],
        [26, 25],
        [27, 26],
        [28, 27],
        [29, 28],
        [30, 29],
        [31, 30],
        [0, 31],
    ]
    faces = []

    mesh = bpy.data.meshes.new(name="WGTL_position")
    mesh.from_pydata(verts, edges, faces)
    # useful for development when the mesh may be invalid.
    # mesh.validate(verbose=True)
    object_data_add(context, mesh)


def add_wgt_offset(self, context):

    verts = [
        Vector((-30.82903289794922, -6.132272720336914, 0.0)),
        Vector((-29.040313720703125, -12.028886795043945, 0.0)),
        Vector((-26.13559341430664, -17.463245391845703, 0.0)),
        Vector((-22.22649383544922, -22.22649383544922, 0.0)),
        Vector((-17.463245391845703, -26.13559341430664, 0.0)),
        Vector((-12.028886795043945, -29.04031753540039, 0.0)),
        Vector((-6.132268905639648, -30.82903289794922, 0.0)),
        Vector((-6.132268905639648, -42.883087158203125, 0.0)),
        Vector((-11.400272369384766, -42.883087158203125, 0.0)),
        Vector((6.132268905639648, -30.82903289794922, 0.0)),
        Vector((12.028886795043945, -29.040313720703125, 0.0)),
        Vector((17.463241577148438, -26.135597229003906, 0.0)),
        Vector((22.22649383544922, -22.226497650146484, 0.0)),
        Vector((26.135589599609375, -17.463245391845703, 0.0)),
        Vector((29.040313720703125, -12.028888702392578, 0.0)),
        Vector((30.82903289794922, -6.132271766662598, 0.0)),
        Vector((42.883087158203125, -6.132271766662598, 0.0)),
        Vector((42.883087158203125, -11.400274276733398, 0.0)),
        Vector((30.82903289794922, -6.132272720336914, 0.0)),
        Vector((29.040313720703125, -12.028886795043945, 0.0)),
        Vector((26.13559341430664, -17.463245391845703, 0.0)),
        Vector((22.22649383544922, -22.22649383544922, 0.0)),
        Vector((17.463245391845703, -26.13559341430664, 0.0)),
        Vector((12.028886795043945, -29.04031753540039, 0.0)),
        Vector((6.132268905639648, -30.82903289794922, 0.0)),
        Vector((6.132268905639648, -42.883087158203125, 0.0)),
        Vector((11.400272369384766, -42.883087158203125, 0.0)),
        Vector((0.0, -52.93418884277344, 0.0)),
        Vector((-6.132268905639648, -30.82903289794922, 0.0)),
        Vector((-12.028886795043945, -29.040313720703125, 0.0)),
        Vector((-17.463241577148438, -26.135597229003906, 0.0)),
        Vector((-22.22649383544922, -22.226497650146484, 0.0)),
        Vector((-26.135589599609375, -17.463245391845703, 0.0)),
        Vector((-29.040313720703125, -12.028888702392578, 0.0)),
        Vector((-30.82903289794922, -6.132271766662598, 0.0)),
        Vector((-42.883087158203125, -6.132271766662598, 0.0)),
        Vector((-42.883087158203125, -11.400274276733398, 0.0)),
        Vector((-30.82903289794922, 6.132272720336914, 0.0)),
        Vector((-29.040313720703125, 12.028886795043945, 0.0)),
        Vector((-26.13559341430664, 17.463245391845703, 0.0)),
        Vector((-22.22649383544922, 22.22649383544922, 0.0)),
        Vector((-17.463245391845703, 26.13559341430664, 0.0)),
        Vector((-12.028886795043945, 29.04031753540039, 0.0)),
        Vector((-6.132268905639648, 30.82903289794922, 0.0)),
        Vector((-6.132268905639648, 42.883087158203125, 0.0)),
        Vector((-11.400272369384766, 42.883087158203125, 0.0)),
        Vector((6.132268905639648, 30.82903289794922, 0.0)),
        Vector((12.028886795043945, 29.040313720703125, 0.0)),
        Vector((17.463241577148438, 26.135597229003906, 0.0)),
        Vector((22.22649383544922, 22.226497650146484, 0.0)),
        Vector((26.135589599609375, 17.463245391845703, 0.0)),
        Vector((29.040313720703125, 12.028888702392578, 0.0)),
        Vector((30.82903289794922, 6.132271766662598, 0.0)),
        Vector((42.883087158203125, 6.132271766662598, 0.0)),
        Vector((42.883087158203125, 11.400274276733398, 0.0)),
        Vector((52.93418884277344, 0.0, 0.0)),
        Vector((30.82903289794922, 6.132272720336914, 0.0)),
        Vector((29.040313720703125, 12.028886795043945, 0.0)),
        Vector((26.13559341430664, 17.463245391845703, 0.0)),
        Vector((22.22649383544922, 22.22649383544922, 0.0)),
        Vector((17.463245391845703, 26.13559341430664, 0.0)),
        Vector((12.028886795043945, 29.04031753540039, 0.0)),
        Vector((6.132268905639648, 30.82903289794922, 0.0)),
        Vector((6.132268905639648, 42.883087158203125, 0.0)),
        Vector((11.400272369384766, 42.883087158203125, 0.0)),
        Vector((0.0, 52.93418884277344, 0.0)),
        Vector((-6.132268905639648, 30.82903289794922, 0.0)),
        Vector((-12.028886795043945, 29.040313720703125, 0.0)),
        Vector((-17.463241577148438, 26.135597229003906, 0.0)),
        Vector((-22.22649383544922, 22.226497650146484, 0.0)),
        Vector((-26.135589599609375, 17.463245391845703, 0.0)),
        Vector((-29.040313720703125, 12.028888702392578, 0.0)),
        Vector((-30.82903289794922, 6.132271766662598, 0.0)),
        Vector((-42.883087158203125, 6.132271766662598, 0.0)),
        Vector((-42.883087158203125, 11.400274276733398, 0.0)),
        Vector((-52.93418884277344, 0.0, 0.0)),
    ]
    edges = [
        [1, 0],
        [2, 1],
        [3, 2],
        [4, 3],
        [5, 4],
        [6, 5],
        [6, 7],
        [27, 8],
        [7, 8],
        [10, 9],
        [11, 10],
        [12, 11],
        [13, 12],
        [14, 13],
        [15, 14],
        [15, 16],
        [55, 17],
        [16, 17],
        [19, 18],
        [20, 19],
        [21, 20],
        [22, 21],
        [23, 22],
        [24, 23],
        [24, 25],
        [27, 26],
        [25, 26],
        [29, 28],
        [30, 29],
        [31, 30],
        [32, 31],
        [33, 32],
        [34, 33],
        [34, 35],
        [75, 36],
        [35, 36],
        [38, 37],
        [39, 38],
        [40, 39],
        [41, 40],
        [42, 41],
        [43, 42],
        [43, 44],
        [65, 45],
        [44, 45],
        [47, 46],
        [48, 47],
        [49, 48],
        [50, 49],
        [51, 50],
        [52, 51],
        [52, 53],
        [55, 54],
        [53, 54],
        [57, 56],
        [58, 57],
        [59, 58],
        [60, 59],
        [61, 60],
        [62, 61],
        [62, 63],
        [65, 64],
        [63, 64],
        [67, 66],
        [68, 67],
        [69, 68],
        [70, 69],
        [71, 70],
        [72, 71],
        [72, 73],
        [75, 74],
        [73, 74],
    ]
    faces = []

    mesh = bpy.data.meshes.new(name="WGTL_offset")
    mesh.from_pydata(verts, edges, faces)
    # useful for development when the mesh may be invalid.
    # mesh.validate(verbose=True)
    object_data_add(context, mesh)

def add_wgt_local(self, context):

    verts = [
        Vector((42.883087158203125, -6.132271766662598, 0.0)),
        Vector((42.883087158203125, -11.400274276733398, 0.0)),
        Vector((-42.883087158203125, -6.132271766662598, 0.0)),
        Vector((-42.883087158203125, -11.400274276733398, 0.0)),
        Vector((42.883087158203125, 6.132271766662598, 0.0)),
        Vector((42.883087158203125, 11.400274276733398, 0.0)),
        Vector((52.93418884277344, 0.0, 0.0)),
        Vector((-42.883087158203125, 6.132271766662598, 0.0)),
        Vector((-42.883087158203125, 11.400274276733398, 0.0)),
        Vector((-52.93418884277344, 0.0, 0.0)),
    ]
    edges = [
        [6, 1],
        [0, 1],
        [4, 7],
        [9, 3],
        [2, 3],
        [6, 5],
        [4, 5],
        [9, 8],
        [7, 8],
        [0, 2],
    ]
    faces = []

    mesh = bpy.data.meshes.new(name="WGTL_local")
    mesh.from_pydata(verts, edges, faces)
    object_data_add(context, mesh)


def add_wgt_double_arrow_thin(self, context):

    verts = [
        Vector((44.44267272949219, -5.844033241271973, 0.0)),
        Vector((-44.44267272949219, -5.844033241271973, 0.0)),
        Vector((44.44267272949219, 5.844033241271973, 0.0)),
        Vector((49.59507751464844, 0.0, 0.0)),
        Vector((-44.44267272949219, 5.844033241271973, 0.0)),
        Vector((-49.59507751464844, 0.0, 0.0)),
    ]
    edges = [[3, 0], [3, 5], [5, 1], [3, 2], [5, 4]]
    faces = []

    mesh = bpy.data.meshes.new(name="WGT_double_arrow_thin")
    mesh.from_pydata(verts, edges, faces)
    object_data_add(context, mesh)


def add_wgt_shake(self, context):

    verts = [
        Vector((4.914012908935547, -16.50209617614746, 5.2136735916137695)),
        Vector((4.507870674133301, -16.50223159790039, 5.379211902618408)),
        Vector((4.116755962371826, -16.50223159790039, 5.528733253479004)),
        Vector((3.7393698692321777, -16.50223159790039, 5.6625471115112305)),
        Vector((3.3744144439697266, -16.50223159790039, 5.780962944030762)),
        Vector((3.0205907821655273, -16.50209617614746, 5.884289264678955)),
        Vector((2.6765992641448975, -16.50223159790039, 5.97283411026001)),
        Vector((2.341141700744629, -16.50223159790039, 6.046910285949707)),
        Vector((2.0129199028015137, -16.50223159790039, 6.106823921203613)),
        Vector((1.6906344890594482, -16.50223159790039, 6.152885913848877)),
        Vector((1.3729872703552246, -16.50209617614746, 6.185404300689697)),
        Vector((1.058679461479187, -16.50209617614746, 6.20468807220459)),
        Vector((0.7464115023612976, -16.50209617614746, 6.211047172546387)),
        Vector((-0.19653236865997314, -16.50223159790039, 6.155637264251709)),
        Vector((-1.0889520645141602, -16.50223159790039, 5.993366241455078)),
        Vector((-1.9248489141464233, -16.50223159790039, 5.730170249938965)),
        Vector((-2.6982247829437256, -16.50223159790039, 5.371986389160156)),
        Vector((-3.4030799865722656, -16.50223159790039, 4.924750804901123)),
        Vector((-4.033416748046875, -16.50223159790039, 4.394400596618652)),
        Vector((-4.5832366943359375, -16.50223159790039, 3.786872386932373)),
        Vector((-5.046540260314941, -16.50223159790039, 3.1081037521362305)),
        Vector((-5.417329788208008, -16.50223159790039, 2.3640308380126953)),
        Vector((-5.689607620239258, -16.50223159790039, 1.5605900287628174)),
        Vector((-5.857371807098389, -16.50223159790039, 0.7037185430526733)),
        Vector((-5.914626121520996, -16.50223159790039, -0.20064668357372284)),
        Vector((-5.872738838195801, -16.50223159790039, -0.8548132181167603)),
        Vector((-5.745758056640625, -16.50223159790039, -1.533530592918396)),
        Vector((-5.531705379486084, -16.50223159790039, -2.2212767601013184)),
        Vector((-5.22860050201416, -16.50223159790039, -2.902529716491699)),
        Vector((-4.834466457366943, -16.50223159790039, -3.5617668628692627)),
        Vector((-4.347322463989258, -16.50223159790039, -4.183467388153076)),
        Vector((-3.765191078186035, -16.50223159790039, -4.7521071434021)),
        Vector((-3.086092710494995, -16.50223159790039, -5.252165794372559)),
        Vector((-2.3080482482910156, -16.50223159790039, -5.66811990737915)),
        Vector((-1.4290788173675537, -16.50223159790039, -5.9844489097595215)),
        Vector((-0.4472061097621918, -16.50223159790039, -6.1856279373168945)),
        Vector((0.6395496726036072, -16.50223159790039, -6.2561354637146)),
        Vector((1.103647232055664, -16.50223159790039, -6.24701452255249)),
        Vector((1.5442451238632202, -16.50223159790039, -6.2202677726745605)),
        Vector((1.963074803352356, -16.50223159790039, -6.176824569702148)),
        Vector((2.361867666244507, -16.50223159790039, -6.117611885070801)),
        Vector((2.742356061935425, -16.50223159790039, -6.043557167053223)),
        Vector((3.106271505355835, -16.50223159790039, -5.955587863922119)),
        Vector((3.4553449153900146, -16.50223159790039, -5.854631423950195)),
        Vector((3.7913076877593994, -16.50223159790039, -5.741617679595947)),
        Vector((4.115891456604004, -16.50223159790039, -5.617471218109131)),
        Vector((4.430827617645264, -16.50223159790039, -5.483120918273926)),
        Vector((4.73784875869751, -16.50223159790039, -5.339494228363037)),
        Vector((5.038685321807861, -16.50223159790039, -5.1875200271606445)),
        Vector((5.038685321807861, -16.50223159790039, -3.2818222045898438)),
        Vector((4.693384647369385, -16.50223159790039, -3.4958748817443848)),
        Vector((4.34375524520874, -16.50223159790039, -3.6926121711730957)),
        Vector((3.9906625747680664, -16.50223159790039, -3.8717870712280273)),
        Vector((3.6349728107452393, -16.50223159790039, -4.033150672912598)),
        Vector((3.2775514125823975, -16.50223159790039, -4.17645788192749)),
        Vector((2.9192636013031006, -16.50223159790039, -4.301459312438965)),
        Vector((2.5609755516052246, -16.50223159790039, -4.4079084396362305)),
        Vector((2.203554153442383, -16.50223159790039, -4.495558738708496)),
        Vector((1.8478642702102661, -16.50223159790039, -4.564160346984863)),
        Vector((1.494771957397461, -16.50223159790039, -4.613468170166016)),
        Vector((1.1451424360275269, -16.50223159790039, -4.643234729766846)),
        Vector((0.799842119216919, -16.50223159790039, -4.653212070465088)),
        Vector((0.08953429013490677, -16.50223159790039, -4.614489555358887)),
        Vector((-0.5784741044044495, -16.50223159790039, -4.500752925872803)),
        Vector((-1.2004725933074951, -16.50223159790039, -4.315652370452881)),
        Vector((-1.7727510929107666, -16.50223159790039, -4.062834739685059)),
        Vector((-2.2915985584259033, -16.50223159790039, -3.74595046043396)),
        Vector((-2.7533047199249268, -16.50223159790039, -3.368647336959839)),
        Vector((-3.1541590690612793, -16.50223159790039, -2.9345734119415283)),
        Vector((-3.4904515743255615, -16.50223159790039, -2.447378635406494)),
        Vector((-3.7584710121154785, -16.50223159790039, -1.910710096359253)),
        Vector((-3.954507827758789, -16.50223159790039, -1.3282179832458496)),
        Vector((-4.074850559234619, -16.50223159790039, -0.7035499811172485)),
        Vector((-4.115789413452148, -16.50223159790039, -0.04035481810569763)),
        Vector((-4.073531150817871, -16.50223159790039, 0.6123170256614685)),
        Vector((-3.94989013671875, -16.50223159790039, 1.2315949201583862)),
        Vector((-3.749565601348877, -16.50223159790039, 1.8130260705947876)),
        Vector((-3.4772586822509766, -16.50223159790039, 2.3521575927734375)),
        Vector((-3.1376678943634033, -16.50223159790039, 2.8445379734039307)),
        Vector((-2.7354941368103027, -16.50223159790039, 3.2857131958007812)),
        Vector((-2.275437116622925, -16.50223159790039, 3.6712310314178467)),
        Vector((-1.7621961832046509, -16.50223159790039, 3.9966394901275635)),
        Vector((-1.2004719972610474, -16.50209617614746, 4.257485389709473)),
        Vector((-0.5949645638465881, -16.50223159790039, 4.449317455291748)),
        Vector((0.04962652549147606, -16.50223159790039, 4.567681789398193)),
        Vector((0.7286014556884766, -16.50223159790039, 4.608123779296875)),
        Vector((1.077952265739441, -16.50223159790039, 4.599908351898193)),
        Vector((1.423283576965332, -16.50223159790039, 4.575059413909912)),
        Vector((1.7657700777053833, -16.50223159790039, 4.533265590667725)),
        Vector((2.1065866947174072, -16.50223159790039, 4.474217414855957)),
        Vector((2.4469094276428223, -16.50223159790039, 4.397607326507568)),
        Vector((2.7879116535186768, -16.50223159790039, 4.303123474121094)),
        Vector((3.130769729614258, -16.50223159790039, 4.190459728240967)),
        Vector((3.4766571521759033, -16.50223159790039, 4.059305667877197)),
        Vector((3.8267505168914795, -16.50223159790039, 3.909350872039795)),
        Vector((4.182224273681641, -16.50223159790039, 3.7402877807617188)),
        Vector((4.544252872467041, -16.50223159790039, 3.5518064498901367)),
        Vector((4.914012908935547, -16.50223159790039, 3.343595266342163)),
        Vector((4.914012908935547, 16.562911987304688, 5.2136735916137695)),
        Vector((4.507870674133301, 16.562789916992188, 5.379211902618408)),
        Vector((4.116755485534668, 16.562789916992188, 5.528733253479004)),
        Vector((3.7393698692321777, 16.562789916992188, 5.6625471115112305)),
        Vector((3.3744144439697266, 16.562789916992188, 5.780962944030762)),
        Vector((3.0205905437469482, 16.562911987304688, 5.884289264678955)),
        Vector((2.6765987873077393, 16.562789916992188, 5.97283411026001)),
        Vector((2.34114146232605, 16.562789916992188, 6.046910285949707)),
        Vector((2.0129196643829346, 16.562789916992188, 6.106823921203613)),
        Vector((1.6906343698501587, 16.562789916992188, 6.152885913848877)),
        Vector((1.372986912727356, 16.562911987304688, 6.185404300689697)),
        Vector((1.058679223060608, 16.562911987304688, 6.20468807220459)),
        Vector((0.7464113235473633, 16.562911987304688, 6.211047172546387)),
        Vector((-0.19653251767158508, 16.562789916992188, 6.155637264251709)),
        Vector((-1.0889523029327393, 16.562789916992188, 5.993366241455078)),
        Vector((-1.9248491525650024, 16.562789916992188, 5.730170249938965)),
        Vector((-2.6982250213623047, 16.562789916992188, 5.371986389160156)),
        Vector((-3.4030799865722656, 16.562789916992188, 4.924750804901123)),
        Vector((-4.033417224884033, 16.562789916992188, 4.394400596618652)),
        Vector((-4.5832366943359375, 16.562789916992188, 3.786872386932373)),
        Vector((-5.046540260314941, 16.562789916992188, 3.1081037521362305)),
        Vector((-5.417329788208008, 16.562789916992188, 2.3640308380126953)),
        Vector((-5.689607620239258, 16.562789916992188, 1.5605899095535278)),
        Vector((-5.857371807098389, 16.562789916992188, 0.7037184238433838)),
        Vector((-5.914626121520996, 16.562789916992188, -0.20064674317836761)),
        Vector((-5.872738838195801, 16.562789916992188, -0.8548133373260498)),
        Vector((-5.745758056640625, 16.562789916992188, -1.533530592918396)),
        Vector((-5.531705379486084, 16.562789916992188, -2.2212769985198975)),
        Vector((-5.22860050201416, 16.562789916992188, -2.902529716491699)),
        Vector((-4.834466457366943, 16.562789916992188, -3.5617668628692627)),
        Vector((-4.347322940826416, 16.562789916992188, -4.183467388153076)),
        Vector((-3.7651915550231934, 16.562789916992188, -4.7521071434021)),
        Vector((-3.086092948913574, 16.562789916992188, -5.252165794372559)),
        Vector((-2.3080484867095947, 16.562789916992188, -5.66811990737915)),
        Vector((-1.4290790557861328, 16.562789916992188, -5.9844489097595215)),
        Vector((-0.4472062885761261, 16.562789916992188, -6.1856279373168945)),
        Vector((0.6395495533943176, 16.562789916992188, -6.2561354637146)),
        Vector((1.103646993637085, 16.562789916992188, -6.24701452255249)),
        Vector((1.5442447662353516, 16.562789916992188, -6.2202677726745605)),
        Vector((1.9630746841430664, 16.562789916992188, -6.176824569702148)),
        Vector((2.361867666244507, 16.562789916992188, -6.117611885070801)),
        Vector((2.742356061935425, 16.562789916992188, -6.043557167053223)),
        Vector((3.106271266937256, 16.562789916992188, -5.955587863922119)),
        Vector((3.4553446769714355, 16.562789916992188, -5.854631423950195)),
        Vector((3.7913074493408203, 16.562789916992188, -5.741617679595947)),
        Vector((4.115891456604004, 16.562789916992188, -5.617471218109131)),
        Vector((4.430827617645264, 16.562789916992188, -5.483120918273926)),
        Vector((4.73784875869751, 16.562789916992188, -5.339494228363037)),
        Vector((5.038685321807861, 16.562789916992188, -5.1875200271606445)),
        Vector((5.038685321807861, 16.562789916992188, -3.2818222045898438)),
        Vector((4.693384647369385, 16.562789916992188, -3.4958748817443848)),
        Vector((4.34375524520874, 16.562789916992188, -3.6926121711730957)),
        Vector((3.9906625747680664, 16.562789916992188, -3.8717870712280273)),
        Vector((3.63497257232666, 16.562789916992188, -4.033150672912598)),
        Vector((3.2775511741638184, 16.562789916992188, -4.17645788192749)),
        Vector((2.9192633628845215, 16.562789916992188, -4.301459312438965)),
        Vector((2.5609753131866455, 16.562789916992188, -4.4079084396362305)),
        Vector((2.2035539150238037, 16.562789916992188, -4.495558738708496)),
        Vector((1.8478641510009766, 16.562789916992188, -4.564160346984863)),
        Vector((1.4947718381881714, 16.562789916992188, -4.613468170166016)),
        Vector((1.1451423168182373, 16.562789916992188, -4.643234729766846)),
        Vector((0.7998419404029846, 16.562789916992188, -4.653212070465088)),
        Vector((0.08953416347503662, 16.562789916992188, -4.614489555358887)),
        Vector((-0.578474223613739, 16.562789916992188, -4.500752925872803)),
        Vector((-1.2004727125167847, 16.562789916992188, -4.315652370452881)),
        Vector((-1.7727510929107666, 16.562789916992188, -4.062834739685059)),
        Vector((-2.2915987968444824, 16.562789916992188, -3.74595046043396)),
        Vector((-2.753304958343506, 16.562789916992188, -3.368647336959839)),
        Vector((-3.1541590690612793, 16.562789916992188, -2.9345734119415283)),
        Vector((-3.4904515743255615, 16.562789916992188, -2.447378635406494)),
        Vector((-3.7584714889526367, 16.562789916992188, -1.9107102155685425)),
        Vector((-3.9545083045959473, 16.562789916992188, -1.3282182216644287)),
        Vector((-4.074850559234619, 16.562789916992188, -0.7035500407218933)),
        Vector((-4.115789413452148, 16.562789916992188, -0.040354881435632706)),
        Vector((-4.073531627655029, 16.562789916992188, 0.612316906452179)),
        Vector((-3.949890375137329, 16.562789916992188, 1.2315948009490967)),
        Vector((-3.749566078186035, 16.562789916992188, 1.8130258321762085)),
        Vector((-3.4772586822509766, 16.562789916992188, 2.3521575927734375)),
        Vector((-3.1376681327819824, 16.562789916992188, 2.8445379734039307)),
        Vector((-2.735494375228882, 16.562789916992188, 3.2857131958007812)),
        Vector((-2.275437355041504, 16.562789916992188, 3.6712310314178467)),
        Vector((-1.76219642162323, 16.562789916992188, 3.9966394901275635)),
        Vector((-1.200472354888916, 16.562911987304688, 4.257485389709473)),
        Vector((-0.5949647426605225, 16.562789916992188, 4.449317455291748)),
        Vector((0.04962640255689621, 16.562789916992188, 4.567681789398193)),
        Vector((0.7286012768745422, 16.562789916992188, 4.608123779296875)),
        Vector((1.077952265739441, 16.562789916992188, 4.599908351898193)),
        Vector((1.423283338546753, 16.562789916992188, 4.575059413909912)),
        Vector((1.7657698392868042, 16.562789916992188, 4.533265590667725)),
        Vector((2.1065866947174072, 16.562789916992188, 4.474217414855957)),
        Vector((2.446909189224243, 16.562789916992188, 4.397607326507568)),
        Vector((2.7879111766815186, 16.562789916992188, 4.303123474121094)),
        Vector((3.1307692527770996, 16.562789916992188, 4.190459728240967)),
        Vector((3.476656675338745, 16.562789916992188, 4.059305667877197)),
        Vector((3.8267502784729004, 16.562789916992188, 3.909350872039795)),
        Vector((4.182223796844482, 16.562789916992188, 3.7402877807617188)),
        Vector((4.544252872467041, 16.562789916992188, 3.5518064498901367)),
        Vector((4.914012908935547, 16.562789916992188, 3.343595266342163)),
    ]
    edges = [
        [12, 13],
        [11, 12],
        [10, 11],
        [9, 10],
        [13, 14],
        [8, 9],
        [7, 8],
        [6, 7],
        [14, 15],
        [5, 6],
        [4, 5],
        [3, 4],
        [15, 16],
        [2, 3],
        [1, 2],
        [0, 1],
        [16, 17],
        [87, 88],
        [88, 89],
        [89, 90],
        [90, 91],
        [91, 92],
        [92, 93],
        [93, 94],
        [94, 95],
        [95, 96],
        [96, 97],
        [0, 97],
        [17, 18],
        [85, 86],
        [86, 87],
        [84, 85],
        [83, 84],
        [82, 83],
        [18, 19],
        [81, 82],
        [80, 81],
        [19, 20],
        [79, 80],
        [78, 79],
        [20, 21],
        [77, 78],
        [21, 22],
        [76, 77],
        [75, 76],
        [22, 23],
        [74, 75],
        [23, 24],
        [73, 74],
        [72, 73],
        [24, 25],
        [71, 72],
        [25, 26],
        [70, 71],
        [26, 27],
        [69, 70],
        [27, 28],
        [68, 69],
        [28, 29],
        [67, 68],
        [49, 50],
        [48, 49],
        [66, 67],
        [50, 51],
        [29, 30],
        [51, 52],
        [65, 66],
        [52, 53],
        [53, 54],
        [64, 65],
        [54, 55],
        [30, 31],
        [55, 56],
        [63, 64],
        [56, 57],
        [57, 58],
        [62, 63],
        [58, 59],
        [59, 60],
        [61, 62],
        [60, 61],
        [31, 32],
        [47, 48],
        [32, 33],
        [46, 47],
        [45, 46],
        [44, 45],
        [33, 34],
        [43, 44],
        [42, 43],
        [41, 42],
        [34, 35],
        [40, 41],
        [39, 40],
        [38, 39],
        [35, 36],
        [36, 37],
        [37, 38],
        [111, 110],
        [110, 109],
        [109, 108],
        [108, 107],
        [112, 111],
        [107, 106],
        [106, 105],
        [105, 104],
        [113, 112],
        [104, 103],
        [103, 102],
        [102, 101],
        [114, 113],
        [101, 100],
        [100, 99],
        [99, 98],
        [115, 114],
        [186, 185],
        [187, 186],
        [188, 187],
        [189, 188],
        [190, 189],
        [191, 190],
        [192, 191],
        [193, 192],
        [194, 193],
        [195, 194],
        [98, 195],
        [116, 115],
        [184, 183],
        [185, 184],
        [183, 182],
        [182, 181],
        [181, 180],
        [117, 116],
        [180, 179],
        [179, 178],
        [118, 117],
        [178, 177],
        [177, 176],
        [119, 118],
        [176, 175],
        [120, 119],
        [175, 174],
        [174, 173],
        [121, 120],
        [173, 172],
        [122, 121],
        [172, 171],
        [171, 170],
        [123, 122],
        [170, 169],
        [124, 123],
        [169, 168],
        [125, 124],
        [168, 167],
        [126, 125],
        [167, 166],
        [127, 126],
        [166, 165],
        [148, 147],
        [147, 146],
        [165, 164],
        [149, 148],
        [128, 127],
        [150, 149],
        [164, 163],
        [151, 150],
        [152, 151],
        [163, 162],
        [153, 152],
        [129, 128],
        [154, 153],
        [162, 161],
        [155, 154],
        [156, 155],
        [161, 160],
        [157, 156],
        [158, 157],
        [160, 159],
        [159, 158],
        [130, 129],
        [146, 145],
        [131, 130],
        [145, 144],
        [144, 143],
        [143, 142],
        [132, 131],
        [142, 141],
        [141, 140],
        [140, 139],
        [133, 132],
        [139, 138],
        [138, 137],
        [137, 136],
        [134, 133],
        [135, 134],
        [136, 135],
    ]
    faces = []

    mesh = bpy.data.meshes.new(name="WGTL_shake")
    mesh.from_pydata(verts, edges, faces)
    # useful for development when the mesh may be invalid.
    # mesh.validate(verbose=True)
    object_data_add(context, mesh)

def add_wgt_arrows_thick(self, context):

    verts = [
        Vector((6.132299900054932, -6.132271766662598, 0.0)),
        Vector((42.883087158203125, -6.132271766662598, 0.0)),
        Vector((42.883087158203125, -11.400274276733398, 0.0)),
        Vector((6.132268905639648, -42.883087158203125, 0.0)),
        Vector((11.400272369384766, -42.883087158203125, 0.0)),
        Vector((-6.132299900054932, -6.132271766662598, 0.0)),
        Vector((-42.883087158203125, -6.132271766662598, 0.0)),
        Vector((-42.883087158203125, -11.400274276733398, 0.0)),
        Vector((-6.132268905639648, -42.883087158203125, 0.0)),
        Vector((-11.400272369384766, -42.883087158203125, 0.0)),
        Vector((0.0, -52.93418884277344, 0.0)),
        Vector((6.132299900054932, 6.132271766662598, 0.0)),
        Vector((42.883087158203125, 6.132271766662598, 0.0)),
        Vector((42.883087158203125, 11.400274276733398, 0.0)),
        Vector((6.132268905639648, 42.883087158203125, 0.0)),
        Vector((11.400272369384766, 42.883087158203125, 0.0)),
        Vector((52.93418884277344, 0.0, 0.0)),
        Vector((-6.132299900054932, 6.132271766662598, 0.0)),
        Vector((-42.883087158203125, 6.132271766662598, 0.0)),
        Vector((-42.883087158203125, 11.400274276733398, 0.0)),
        Vector((-6.132268905639648, 42.883087158203125, 0.0)),
        Vector((-11.400272369384766, 42.883087158203125, 0.0)),
        Vector((0.0, 52.93418884277344, 0.0)),
        Vector((-52.93418884277344, 0.0, 0.0)),
    ]
    edges = [
        [0, 1],
        [16, 2],
        [1, 2],
        [10, 4],
        [3, 4],
        [0, 3],
        [5, 6],
        [23, 7],
        [6, 7],
        [10, 9],
        [8, 9],
        [5, 8],
        [11, 12],
        [16, 13],
        [12, 13],
        [22, 15],
        [14, 15],
        [11, 14],
        [17, 18],
        [23, 19],
        [18, 19],
        [22, 21],
        [20, 21],
        [17, 20],
    ]
    faces = []

    mesh = bpy.data.meshes.new(name="WGT_arrows_thick")
    mesh.from_pydata(verts, edges, faces)
    # useful for development when the mesh may be invalid.
    # mesh.validate(verbose=True)
    object_data_add(context, mesh, operator=self)


def add_wgt_arrows_thin(self, context):

    verts = [
        Vector((-5.844030380249023, -44.44267272949219, 0.0)),
        Vector((44.44267272949219, -5.844033241271973, 0.0)),
        Vector((0.0, -49.59507751464844, 0.0)),
        Vector((5.844030380249023, -44.44267272949219, 0.0)),
        Vector((-44.44267272949219, -5.844033241271973, 0.0)),
        Vector((-5.844030380249023, 44.44267272949219, 0.0)),
        Vector((44.44267272949219, 5.844033241271973, 0.0)),
        Vector((49.59507751464844, 0.0, 0.0)),
        Vector((0.0, 0.0, 0.0)),
        Vector((0.0, 49.59507751464844, 0.0)),
        Vector((5.844030380249023, 44.44267272949219, 0.0)),
        Vector((-44.44267272949219, 5.844033241271973, 0.0)),
        Vector((-49.59507751464844, 0.0, 0.0)),
        Vector((0.0, 0.0, 0.0)),
    ]
    edges = [
        [8, 2],
        [2, 0],
        [13, 7],
        [7, 1],
        [2, 3],
        [13, 12],
        [12, 4],
        [8, 9],
        [9, 5],
        [7, 6],
        [9, 10],
        [12, 11],
    ]
    faces = []

    mesh = bpy.data.meshes.new(name="WGT_arrows_thin")
    mesh.from_pydata(verts, edges, faces)
    # useful for development when the mesh may be invalid.
    # mesh.validate(verbose=True)
    object_data_add(context, mesh, operator=self)


def add_wgt_square(self, context):
    # go to object mode
    bpy.ops.object.mode_set(mode="OBJECT")
    # create widget for CTL custom shape
    bpy.ops.mesh.primitive_plane_add(size=20, location=(0, 0, 0), rotation=(0, 0, 0))
    # identify widget
    mesh = bpy.context.view_layer.objects.active
    # change its name
    mesh.name = "WGT_square"
    # apply/freeze transforms
    bpy.ops.object.transform_apply(location=True, rotation=True, scale=True)
    # go to edit mode
    bpy.ops.object.mode_set(mode="EDIT")
    # delete only faces
    bpy.ops.mesh.delete(type="ONLY_FACE")
    # go to object mode
    bpy.ops.object.mode_set(mode="OBJECT")


def add_wgt_circle(self, context):
    # go to object mode
    bpy.ops.object.mode_set(mode="OBJECT")
    # create widget for CTL custom shape
    widget = bpy.ops.mesh.primitive_circle_add(
        radius=14, location=(0, 0, 0), rotation=(0, 0, 0)
    )
    # identify widget
    mesh = bpy.context.view_layer.objects.active
    # change its name
    mesh.name = "WGT_circle"
    # apply/freeze transforms
    bpy.ops.object.transform_apply(location=True, rotation=True, scale=True)


def add_wgt_cube(self, context):
    # go to object mode
    bpy.ops.object.mode_set(mode="OBJECT")
    # create widget for CTL custom shape
    bpy.ops.mesh.primitive_cube_add(size=20, location=(0, 0, 0), rotation=(0, 0, 0))
    # identify widget
    mesh = bpy.context.view_layer.objects.active
    # change its name
    mesh.name = "WGT_cube"
    # apply/freeze transforms
    bpy.ops.object.transform_apply(location=True, rotation=True, scale=True)
    # go to edit mode
    bpy.ops.object.mode_set(mode="EDIT")
    # delete only faces
    bpy.ops.mesh.delete(type="ONLY_FACE")
    # go to object mode
    bpy.ops.object.mode_set(mode="OBJECT")


def add_wgt_prism(self, context):

    verts = [
        Vector((0.0, -4.82112979888916, 0.002157649490982294)),
        Vector((0.0, 7.471405183423485e-08, 9.64225959777832)),
        Vector((-4.82112979888916, 7.471405183423485e-08, 0.0)),
        Vector((4.82112979888916, 0.0, 0.0)),
        Vector((0.02286902815103531, 0.0, -9.64225959777832)),
        Vector((0.0, 4.82112979888916, 0.0)),
    ]
    edges = [
        [2, 0],
        [0, 1],
        [4, 2],
        [5, 4],
        [3, 4],
        [0, 3],
        [5, 3],
        [3, 1],
        [1, 2],
        [2, 5],
        [0, 4],
        [1, 5],
    ]
    faces = []

    mesh = bpy.data.meshes.new(name="WGT_prism")
    mesh.from_pydata(verts, edges, faces)
    # useful for development when the mesh may be invalid.
    # mesh.validate(verbose=True)
    object_data_add(context, mesh, operator=self)


def add_wgt_sphere_low(self, context):

    verts = [
        Vector((-1.0925955962193257e-07, 2.9267046451568604, 0.0)),
        Vector((-0.570971667766571, 2.870469331741333, 0.0)),
        Vector((-1.1200013160705566, 2.7039215564727783, 0.0)),
        Vector((-1.625989556312561, 2.4334654808044434, 0.0)),
        Vector((-2.0694921016693115, 2.069492816925049, 0.0)),
        Vector((-2.4334654808044434, 1.6259901523590088, 0.0)),
        Vector((-2.7039215564727783, 1.1200016736984253, 0.0)),
        Vector((-2.8704681396484375, 0.5709724426269531, 0.0)),
        Vector((-2.926703691482544, 9.785275096874102e-07, 0.0)),
        Vector((-2.8704681396484375, -0.5709702372550964, 0.0)),
        Vector((-2.7039220333099365, -1.1199997663497925, 0.0)),
        Vector((-2.4334654808044434, -1.6259888410568237, 0.0)),
        Vector((-2.0694921016693115, -2.0694916248321533, 0.0)),
        Vector((-1.6259891986846924, -2.433464288711548, 0.0)),
        Vector((-1.120000958442688, -2.70392107963562, 0.0)),
        Vector((-0.5709711313247681, -2.8704676628112793, 0.0)),
        Vector((8.443815886494122e-07, -2.9267029762268066, 0.0)),
        Vector((0.5709728002548218, -2.8704676628112793, 0.0)),
        Vector((1.1200021505355835, -2.703920364379883, 0.0)),
        Vector((1.625990867614746, -2.4334635734558105, 0.0)),
        Vector((2.069493532180786, -2.0694899559020996, 0.0)),
        Vector((2.4334664344787598, -1.6259864568710327, 0.0)),
        Vector((2.7039225101470947, -1.1199983358383179, 0.0)),
        Vector((2.8704679012298584, -0.5709682703018188, 0.0)),
        Vector((2.926703691482544, 3.5835907965520164e-06, 0.0)),
        Vector((2.8704679012298584, 0.5709752440452576, 0.0)),
        Vector((2.7039198875427246, 1.1200050115585327, 0.0)),
        Vector((2.4334635734558105, 1.625993251800537, 0.0)),
        Vector((2.0694892406463623, 2.069495677947998, 0.0)),
        Vector((1.6259863376617432, 2.4334681034088135, 0.0)),
        Vector((1.1199970245361328, 2.7039244174957275, 0.0)),
        Vector((0.5709670782089233, 2.870469331741333, 0.0)),
        Vector((1.5376675288419038e-14, 2.9267046451568604, -1.0925955962193257e-07)),
        Vector((-5.582243289836697e-08, 2.870469331741333, -0.570971667766571)),
        Vector((-1.1164488000758865e-07, 2.7039215564727783, -1.1200013160705566)),
        Vector((-1.1164488000758865e-07, 2.4334654808044434, -1.625989556312561)),
        Vector((-2.232897600151773e-07, 2.069492816925049, -2.0694921016693115)),
        Vector((-2.232897600151773e-07, 1.6259901523590088, -2.4334654808044434)),
        Vector((-2.232897600151773e-07, 1.1200016736984253, -2.7039215564727783)),
        Vector((-2.232897600151773e-07, 0.5709724426269531, -2.8704681396484375)),
        Vector((-2.232897600151773e-07, 9.785275096874102e-07, -2.926703691482544)),
        Vector((-2.232897600151773e-07, -0.5709702372550964, -2.8704681396484375)),
        Vector((-2.232897600151773e-07, -1.1199997663497925, -2.7039220333099365)),
        Vector((-2.232897600151773e-07, -1.6259888410568237, -2.4334654808044434)),
        Vector((-2.232897600151773e-07, -2.0694916248321533, -2.0694921016693115)),
        Vector((-1.1164488000758865e-07, -2.433464288711548, -1.6259891986846924)),
        Vector((-1.1164488000758865e-07, -2.70392107963562, -1.120000958442688)),
        Vector((-5.582243289836697e-08, -2.8704676628112793, -0.5709711313247681)),
        Vector((1.2184955193277058e-13, -2.9267029762268066, 8.443815886494122e-07)),
        Vector((5.582246842550376e-08, -2.8704676628112793, 0.5709728002548218)),
        Vector((1.1164491553472544e-07, -2.703920364379883, 1.1200021505355835)),
        Vector((1.1164491553472544e-07, -2.4334635734558105, 1.625990867614746)),
        Vector((2.2328980264774145e-07, -2.0694899559020996, 2.069493532180786)),
        Vector((2.2328980264774145e-07, -1.6259864568710327, 2.4334664344787598)),
        Vector((2.2328980264774145e-07, -1.1199983358383179, 2.7039225101470947)),
        Vector((2.2328980264774145e-07, -0.5709682703018188, 2.8704679012298584)),
        Vector((2.2328980264774145e-07, 3.5835907965520164e-06, 2.926703691482544)),
        Vector((2.2328980264774145e-07, 0.5709752440452576, 2.8704679012298584)),
        Vector((2.2328980264774145e-07, 1.1200050115585327, 2.7039198875427246)),
        Vector((2.2328980264774145e-07, 1.625993251800537, 2.4334635734558105)),
        Vector((2.2328980264774145e-07, 2.069495677947998, 2.0694892406463623)),
        Vector((1.1164491553472544e-07, 2.4334681034088135, 1.6259863376617432)),
        Vector((1.1164491553472544e-07, 2.7039244174957275, 1.1199970245361328)),
        Vector((5.582246842550376e-08, 2.870469331741333, 0.5709670782089233)),
        Vector((-2.9267046451568604, 2.2328978843688674e-07, -1.0925955962193257e-07)),
        Vector((-2.870469331741333, 2.2328978843688674e-07, -0.570971667766571)),
        Vector((-2.7039215564727783, -2.237696722254094e-15, -1.1200013160705566)),
        Vector((-2.4334654808044434, -2.237696722254094e-15, -1.625989556312561)),
        Vector((-2.069493055343628, -2.237696722254094e-15, -2.0694921016693115)),
        Vector((-1.625990390777588, -1.1164490132387073e-07, -2.4334654808044434)),
        Vector((-1.1200016736984253, -1.1164490132387073e-07, -2.7039215564727783)),
        Vector((-0.5709724426269531, -1.6746736264394713e-07, -2.8704681396484375)),
        Vector((-1.0050691798824118e-06, -2.2328980264774145e-07, -2.926703691482544)),
        Vector((0.570970356464386, -2.791122426515358e-07, -2.8704681396484375)),
        Vector((1.1200000047683716, -3.349346968661848e-07, -2.7039220333099365)),
        Vector((1.6259887218475342, -3.349346968661848e-07, -2.4334654808044434)),
        Vector((2.0694916248321533, -4.465795768737735e-07, -2.0694921016693115)),
        Vector((2.433464765548706, -2.2328980264774145e-07, -1.6259891986846924)),
        Vector((2.7039215564727783, -2.2328980264774145e-07, -1.120000958442688)),
        Vector((2.8704676628112793, -2.2328980264774145e-07, -0.5709711313247681)),
        Vector((2.9267029762268066, -2.2328980264774145e-07, 8.443815886494122e-07)),
        Vector((2.8704676628112793, -2.2328980264774145e-07, 0.5709728002548218)),
        Vector((2.7039198875427246, -2.237696722254094e-15, 1.1200021505355835)),
        Vector((2.4334635734558105, -2.237696722254094e-15, 1.625990867614746)),
        Vector((2.0694899559020996, -2.237696722254094e-15, 2.069493532180786)),
        Vector((1.6259863376617432, 1.1164488000758865e-07, 2.4334664344787598)),
        Vector((1.1199983358383179, 1.1164488000758865e-07, 2.7039225101470947)),
        Vector((0.5709682703018188, 1.674673484330924e-07, 2.8704679012298584)),
        Vector((-3.610132125686505e-06, 2.2329000159970747e-07, 2.926703691482544)),
        Vector((-0.5709753036499023, 2.791122710732452e-07, 2.8704679012298584)),
        Vector((-1.1200050115585327, 3.3493472528789425e-07, 2.7039198875427246)),
        Vector((-1.6259933710098267, 3.3493472528789425e-07, 2.4334635734558105)),
        Vector((-2.069495677947998, 4.465795768737735e-07, 2.0694892406463623)),
        Vector((-2.4334681034088135, 2.2328978843688674e-07, 1.6259863376617432)),
        Vector((-2.7039244174957275, 2.2328978843688674e-07, 1.1199970245361328)),
        Vector((-2.870469331741333, 2.2328978843688674e-07, 0.5709670782089233)),
    ]
    edges = [
        [1, 0],
        [2, 1],
        [3, 2],
        [4, 3],
        [5, 4],
        [6, 5],
        [7, 6],
        [8, 7],
        [9, 8],
        [10, 9],
        [11, 10],
        [12, 11],
        [13, 12],
        [14, 13],
        [15, 14],
        [16, 15],
        [17, 16],
        [18, 17],
        [19, 18],
        [20, 19],
        [21, 20],
        [22, 21],
        [23, 22],
        [24, 23],
        [25, 24],
        [26, 25],
        [27, 26],
        [28, 27],
        [29, 28],
        [30, 29],
        [31, 30],
        [0, 31],
        [33, 32],
        [34, 33],
        [35, 34],
        [36, 35],
        [37, 36],
        [38, 37],
        [39, 38],
        [40, 39],
        [41, 40],
        [42, 41],
        [43, 42],
        [44, 43],
        [45, 44],
        [46, 45],
        [47, 46],
        [48, 47],
        [49, 48],
        [50, 49],
        [51, 50],
        [52, 51],
        [53, 52],
        [54, 53],
        [55, 54],
        [56, 55],
        [57, 56],
        [58, 57],
        [59, 58],
        [60, 59],
        [61, 60],
        [62, 61],
        [63, 62],
        [32, 63],
        [65, 64],
        [66, 65],
        [67, 66],
        [68, 67],
        [69, 68],
        [70, 69],
        [71, 70],
        [72, 71],
        [73, 72],
        [74, 73],
        [75, 74],
        [76, 75],
        [77, 76],
        [78, 77],
        [79, 78],
        [80, 79],
        [81, 80],
        [82, 81],
        [83, 82],
        [84, 83],
        [85, 84],
        [86, 85],
        [87, 86],
        [88, 87],
        [89, 88],
        [90, 89],
        [91, 90],
        [92, 91],
        [93, 92],
        [94, 93],
        [95, 94],
        [64, 95],
    ]
    faces = []

    mesh = bpy.data.meshes.new(name="WGT_sphere_low")
    mesh.from_pydata(verts, edges, faces)
    # useful for development when the mesh may be invalid.
    # mesh.validate(verbose=True)
    object_data_add(context, mesh, operator=self)


def add_wgt_sphere_high(self, context):

    verts = [
        Vector((-1.8358052784606116e-06, 2.928673028945923, 0.0)),
        Vector((-0.5713561177253723, 2.8724000453948975, 0.0)),
        Vector((-1.1207540035247803, 2.7057409286499023, 0.0)),
        Vector((-1.6270815134048462, 2.435103416442871, 0.0)),
        Vector((-2.0708816051483154, 2.0708866119384766, 0.0)),
        Vector((-2.43509840965271, 1.6270872354507446, 0.0)),
        Vector((-2.705735683441162, 1.1207597255706787, 0.0)),
        Vector((-2.8723950386047363, 0.5713623762130737, 0.0)),
        Vector((-2.9286677837371826, 7.892330359027255e-06, 0.0)),
        Vector((-2.8723950386047363, -0.5713462233543396, 0.0)),
        Vector((-2.7057368755340576, -1.120743751525879, 0.0)),
        Vector((-2.43509840965271, -1.6270725727081299, 0.0)),
        Vector((-2.0708816051483154, -2.0708718299865723, 0.0)),
        Vector((-1.627081036567688, -2.435088872909546, 0.0)),
        Vector((-1.120753526687622, -2.7057273387908936, 0.0)),
        Vector((-0.5713558197021484, -2.872385263442993, 0.0)),
        Vector((-8.815248975224677e-07, -2.9286582469940186, 0.0)),
        Vector((0.5713537931442261, -2.872385263442993, 0.0)),
        Vector((1.120751142501831, -2.705726146697998, 0.0)),
        Vector((1.6270792484283447, -2.435088872909546, 0.0)),
        Vector((2.0708792209625244, -2.070870876312256, 0.0)),
        Vector((2.435096263885498, -1.6270697116851807, 0.0)),
        Vector((2.705733299255371, -1.1207420825958252, 0.0)),
        Vector((2.8723907470703125, -0.5713443160057068, 0.0)),
        Vector((2.928664207458496, 1.049913862516405e-05, 0.0)),
        Vector((2.8723907470703125, 0.5713647603988647, 0.0)),
        Vector((2.7057313919067383, 1.1207629442214966, 0.0)),
        Vector((2.4350926876068115, 1.6270899772644043, 0.0)),
        Vector((2.0708746910095215, 2.070889949798584, 0.0)),
        Vector((1.6270743608474731, 2.4351067543029785, 0.0)),
        Vector((1.120746374130249, 2.7057442665100098, 0.0)),
        Vector((0.5713481307029724, 2.8724000453948975, 0.0)),
        Vector((9.412532331245366e-14, 2.928673028945923, -1.8358052784606116e-06)),
        Vector((-5.585977902455852e-08, 2.8724000453948975, -0.5713561177253723)),
        Vector((-1.1171967173595476e-07, 2.7057409286499023, -1.1207540035247803)),
        Vector((-1.1171967173595476e-07, 2.435103416442871, -1.6270815134048462)),
        Vector((-2.2343944294789253e-07, 2.0708866119384766, -2.0708816051483154)),
        Vector((-2.2343944294789253e-07, 1.6270872354507446, -2.43509840965271)),
        Vector((-2.2343944294789253e-07, 1.1207597255706787, -2.705735683441162)),
        Vector((-2.2343944294789253e-07, 0.5713623762130737, -2.8723950386047363)),
        Vector((-2.2343944294789253e-07, 7.892330359027255e-06, -2.9286677837371826)),
        Vector((-2.2343944294789253e-07, -0.5713462233543396, -2.8723950386047363)),
        Vector((-2.2343944294789253e-07, -1.120743751525879, -2.7057368755340576)),
        Vector((-2.2343944294789253e-07, -1.6270725727081299, -2.43509840965271)),
        Vector((-2.2343944294789253e-07, -2.0708718299865723, -2.0708816051483154)),
        Vector((-1.1171967173595476e-07, -2.435088872909546, -1.627081036567688)),
        Vector((-1.1171967173595476e-07, -2.7057273387908936, -1.120753526687622)),
        Vector((-5.585977902455852e-08, -2.872385263442993, -0.5713558197021484)),
        Vector((2.0066957264700674e-13, -2.9286582469940186, -8.815248975224677e-07)),
        Vector((5.585995666024246e-08, -2.872385263442993, 0.5713537931442261)),
        Vector((1.1171980673907456e-07, -2.705726146697998, 1.120751142501831)),
        Vector((1.1171980673907456e-07, -2.435088872909546, 1.6270792484283447)),
        Vector((2.2343965611071326e-07, -2.070870876312256, 2.0708792209625244)),
        Vector((2.2343965611071326e-07, -1.6270697116851807, 2.435096263885498)),
        Vector((2.2343965611071326e-07, -1.1207420825958252, 2.705733299255371)),
        Vector((2.2343965611071326e-07, -0.5713443160057068, 2.8723907470703125)),
        Vector((2.2343965611071326e-07, 1.049913862516405e-05, 2.928664207458496)),
        Vector((2.2343965611071326e-07, 0.5713647603988647, 2.8723907470703125)),
        Vector((2.2343965611071326e-07, 1.1207629442214966, 2.7057313919067383)),
        Vector((2.2343965611071326e-07, 1.6270899772644043, 2.4350926876068115)),
        Vector((2.2343965611071326e-07, 2.070889949798584, 2.0708746910095215)),
        Vector((1.1171980673907456e-07, 2.4351067543029785, 1.6270743608474731)),
        Vector((1.1171980673907456e-07, 2.7057442665100098, 1.120746374130249)),
        Vector((5.585995666024246e-08, 2.8724000453948975, 0.5713481307029724)),
        Vector((-2.9286739826202393, 2.2343954242387554e-07, -1.8358052784606116e-06)),
        Vector((-2.872401237487793, 2.2343954242387554e-07, -0.5713561177253723)),
        Vector((-2.705742120742798, 5.530202557284432e-14, -1.1207540035247803)),
        Vector((-2.4351046085357666, 5.530202557284432e-14, -1.6270815134048462)),
        Vector((-2.070887804031372, 5.530202557284432e-14, -2.0708816051483154)),
        Vector((-1.6270877122879028, -1.1171972147394627e-07, -2.43509840965271)),
        Vector((-1.1207596063613892, -1.1171972147394627e-07, -2.705735683441162)),
        Vector((-0.5713622570037842, -1.6757958576363308e-07, -2.8723950386047363)),
        Vector((-8.167202395270579e-06, -2.2343944294789253e-07, -2.9286677837371826)),
        Vector((0.5713460445404053, -2.7929934276471613e-07, -2.8723950386047363)),
        Vector((1.1207438707351685, -3.3515917152726615e-07, -2.7057368755340576)),
        Vector((1.627071499824524, -3.3515917152726615e-07, -2.43509840965271)),
        Vector((2.0708718299865723, -4.4687888589578506e-07, -2.0708816051483154)),
        Vector((2.435088872909546, -2.2343944294789253e-07, -1.627081036567688)),
        Vector((2.7057273387908936, -2.2343944294789253e-07, -1.120753526687622)),
        Vector((2.8723843097686768, -2.2343944294789253e-07, -0.5713558197021484)),
        Vector((2.9286582469940186, -2.2343944294789253e-07, -8.815248975224677e-07)),
        Vector((2.8723843097686768, -2.2343944294789253e-07, 0.5713537931442261)),
        Vector((2.7057251930236816, 5.530202557284432e-14, 1.120751142501831)),
        Vector((2.4350881576538086, 5.530202557284432e-14, 1.6270792484283447)),
        Vector((2.0708699226379395, 5.530202557284432e-14, 2.0708792209625244)),
        Vector((1.627069354057312, 1.1171982805535663e-07, 2.435096263885498)),
        Vector((1.1207417249679565, 1.1171982805535663e-07, 2.705733299255371)),
        Vector((0.5713438391685486, 1.6757967102876137e-07, 2.8723907470703125)),
        Vector((-1.0774012480396777e-05, 2.234397982192604e-07, 2.928664207458496)),
        Vector((-0.5713651776313782, 2.7929945645155385e-07, 2.8723907470703125)),
        Vector((-1.120762825012207, 3.3515937047923217e-07, 2.7057313919067383)),
        Vector((-1.6270904541015625, 3.3515937047923217e-07, 2.4350926876068115)),
        Vector((-2.070889711380005, 4.468790848477511e-07, 2.0708746910095215)),
        Vector((-2.4351065158843994, 2.2343954242387554e-07, 1.6270743608474731)),
        Vector((-2.7057440280914307, 2.2343954242387554e-07, 1.120746374130249)),
        Vector((-2.872401237487793, 2.2343954242387554e-07, 0.5713481307029724)),
        Vector((-2.031087636947632, 2.031097650527954, 0.5713483691215515)),
        Vector((-1.9132444858551025, 1.9132534265518188, 1.1207462549209595)),
        Vector((-1.7218742370605469, 1.7218831777572632, 1.627074956893921)),
        Vector((-1.46433424949646, 1.464343547821045, 2.0708746910095215)),
        Vector((-1.1505202054977417, 1.1505296230316162, 2.435093879699707)),
        Vector((-0.7924928069114685, 0.7925022840499878, 2.7057313919067383)),
        Vector((-0.40400969982147217, 0.40401899814605713, 2.8723907470703125)),
        Vector((-1.0672276857803809e-06, 1.050523769663414e-05, 2.928664207458496)),
        Vector((0.40400761365890503, -0.4039981961250305, 2.8723907470703125)),
        Vector((0.7924908399581909, -0.7924814224243164, 2.705733299255371)),
        Vector((1.1505184173583984, -1.1505091190338135, 2.435096263885498)),
        Vector((1.4643328189849854, -1.46432363986969, 2.0708789825439453)),
        Vector((1.721873164176941, -1.7218642234802246, 1.6270791292190552)),
        Vector((1.9132434129714966, -1.9132344722747803, 1.1207516193389893)),
        Vector((2.031088352203369, -2.031080722808838, 0.5713539719581604)),
        Vector((2.070880889892578, -2.070870876312256, -7.44733711144363e-07)),
        Vector((2.031088352203369, -2.031080722808838, -0.5713553428649902)),
        Vector((1.9132444858551025, -1.9132344722747803, -1.120753526687622)),
        Vector((1.7218739986419678, -1.7218654155731201, -1.627081036567688)),
        Vector((1.4643340110778809, -1.464325189590454, -2.0708816051483154)),
        Vector((1.1505199670791626, -1.1505111455917358, -2.43509840965271)),
        Vector((0.7924916744232178, -0.792482852935791, -2.7057368755340576)),
        Vector((0.404008686542511, -0.4039999544620514, -2.872393846511841)),
        Vector((4.600740908244916e-07, 8.345953574462328e-06, -2.9286680221557617)),
        Vector((-0.40400809049606323, 0.4040168225765228, -2.872393846511841)),
        Vector((-0.7924906611442566, 0.7924996018409729, -2.705735683441162)),
        Vector((-1.1505186557769775, 1.1505273580551147, -2.43509840965271)),
        Vector((-1.464332103729248, 1.4643409252166748, -2.0708816051483154)),
        Vector((-1.721872329711914, 1.7218809127807617, -1.627081036567688)),
        Vector((-1.9132425785064697, 1.913251280784607, -1.120753526687622)),
        Vector((-2.031087636947632, 2.031097650527954, -0.5713558793067932)),
        Vector((-2.070878744125366, 2.070887804031372, -1.699014092082507e-06)),
        Vector((-2.070878744125366, -2.0708699226379395, -1.8358052784606116e-06)),
        Vector((-2.031087636947632, -2.031078577041626, -0.5713561177253723)),
        Vector((-1.9132425785064697, -1.9132336378097534, -1.1207540035247803)),
        Vector((-1.7218722105026245, -1.7218642234802246, -1.6270815134048462)),
        Vector((-1.464332103729248, -1.4643230438232422, -2.0708816051483154)),
        Vector((-1.1505179405212402, -1.1505094766616821, -2.43509840965271)),
        Vector((-0.7924904227256775, -0.7924819588661194, -2.705735683441162)),
        Vector((-0.40400785207748413, -0.403999388217926, -2.8723950386047363)),
        Vector((6.651223429798847e-07, 9.12508403416723e-06, -2.9286677837371826)),
        Vector((0.40400904417037964, 0.40401729941368103, -2.8723950386047363)),
        Vector((0.7924919128417969, 0.7925001382827759, -2.7057368755340576)),
        Vector((1.1505199670791626, 1.1505279541015625, -2.43509840965271)),
        Vector((1.4643341302871704, 1.4643425941467285, -2.0708816051483154)),
        Vector((1.7218741178512573, 1.7218821048736572, -1.627081036567688)),
        Vector((1.9132444858551025, 1.913252353668213, -1.120753526687622)),
        Vector((2.0310895442962646, 2.031097412109375, -0.5713558197021484)),
        Vector((2.070880889892578, 2.0708885192871094, -8.815248975224677e-07)),
        Vector((2.0310895442962646, 2.031097412109375, 0.5713537931442261)),
        Vector((1.9132434129714966, 1.913252353668213, 1.120751142501831)),
        Vector((1.7218741178512573, 1.7218821048736572, 1.6270792484283447)),
        Vector((1.464332938194275, 1.464341402053833, 2.0708792209625244)),
        Vector((1.1505179405212402, 1.1505268812179565, 2.435096263885498)),
        Vector((0.7924906015396118, 0.792499303817749, 2.705733299255371)),
        Vector((0.40400731563568115, 0.4040161967277527, 2.8723907470703125)),
        Vector((-1.4941616655050893e-06, 7.5977823144057766e-06, 2.928664207458496)),
        Vector((-0.4040101170539856, -0.4040009677410126, 2.8723907470703125)),
        Vector((-0.7924931049346924, -0.7924838662147522, 2.7057313919067383)),
        Vector((-1.1505206823349, -1.1505117416381836, 2.4350926876068115)),
        Vector((-1.4643347263336182, -1.464325189590454, 2.0708746910095215)),
        Vector((-1.7218742370605469, -1.7218652963638306, 1.6270743608474731)),
        Vector((-1.9132434129714966, -1.9132356643676758, 1.120746374130249)),
        Vector((-2.031087636947632, -2.031078577041626, 0.5713481307029724)),
        Vector((-1.8358052784606116e-06, 2.070887804031372, -2.0708799362182617)),
        Vector((-0.5713561177253723, 2.0310964584350586, -2.0310885906219482)),
        Vector((-1.1207540035247803, 1.9132513999938965, -1.9132425785064697)),
        Vector((-1.6270815134048462, 1.7218810319900513, -1.7218730449676514)),
        Vector((-2.0708816051483154, 1.4643410444259644, -1.4643324613571167)),
        Vector((-2.43509840965271, 1.1505268812179565, -1.1505190134048462)),
        Vector((-2.705735683441162, 0.7924993634223938, -0.79249107837677)),
        Vector((-2.8723950386047363, 0.40401673316955566, -0.4040083885192871)),
        Vector((-2.9286677837371826, 8.220656127377879e-06, 5.473913944342712e-08)),
        Vector((-2.8723950386047363, -0.4040001928806305, 0.4040083885192871)),
        Vector((-2.7057368755340576, -0.7924830317497253, 0.7924911975860596)),
        Vector((-2.43509840965271, -1.1505111455917358, 1.1505197286605835)),
        Vector((-2.0708816051483154, -1.464325189590454, 1.4643336534500122)),
        Vector((-1.627081036567688, -1.7218652963638306, 1.7218732833862305)),
        Vector((-1.120753526687622, -1.9132356643676758, 1.9132434129714966)),
        Vector((-0.5713558197021484, -2.031080722808838, 2.031088352203369)),
        Vector((-8.815248975224677e-07, -2.0708718299865723, 2.0708796977996826)),
        Vector((0.5713537931442261, -2.031080722808838, 2.031088352203369)),
        Vector((1.120751142501831, -1.9132344722747803, 1.9132434129714966)),
        Vector((1.6270792484283447, -1.7218652963638306, 1.7218732833862305)),
        Vector((2.0708792209625244, -1.4643239974975586, 1.464332103729248)),
        Vector((2.435096263885498, -1.1505094766616821, 1.150517463684082)),
        Vector((2.705733299255371, -0.7924819588661194, 0.7924901247024536)),
        Vector((2.8723907470703125, -0.4039986729621887, 0.4040068984031677)),
        Vector((2.928664207458496, 1.0063949957839213e-05, -1.7885536180983763e-06)),
        Vector((2.8723907470703125, 0.404018759727478, -0.4040103852748871)),
        Vector((2.7057313919067383, 0.7925017476081848, -0.7924932837486267)),
        Vector((2.4350926876068115, 1.1505290269851685, -1.1505205631256104)),
        Vector((2.0708746910095215, 1.4643430709838867, -1.4643346071243286)),
        Vector((1.6270743608474731, 1.7218831777572632, -1.7218741178512573)),
        Vector((1.120746374130249, 1.913252353668213, -1.9132444858551025)),
        Vector((0.5713481307029724, 2.0310964584350586, -2.0310885906219482)),
        Vector((-1.8358052784606116e-06, -2.070868730545044, -2.0708799362182617)),
        Vector((-0.5713561177253723, -2.0310776233673096, -2.0310885906219482)),
        Vector((-1.1207540035247803, -1.913231372833252, -1.9132425785064697)),
        Vector((-1.6270815134048462, -1.7218623161315918, -1.7218730449676514)),
        Vector((-2.0708816051483154, -1.4643222093582153, -1.464332938194275)),
        Vector((-2.43509840965271, -1.150508165359497, -1.1505190134048462)),
        Vector((-2.705735683441162, -0.7924808263778687, -0.7924911379814148)),
        Vector((-2.8723950386047363, -0.40399813652038574, -0.4040083885192871)),
        Vector((-2.9286677837371826, 1.020151648845058e-05, 1.254738180023196e-07)),
        Vector((-2.8723950386047363, 0.40401846170425415, 0.40400853753089905)),
        Vector((-2.7057368755340576, 0.7925011515617371, 0.7924911975860596)),
        Vector((-2.43509840965271, 1.150529384613037, 1.1505197286605835)),
        Vector((-2.0708816051483154, 1.4643439054489136, 1.4643336534500122)),
        Vector((-1.627081036567688, 1.72188401222229, 1.7218732833862305)),
        Vector((-1.120753526687622, 1.9132534265518188, 1.9132434129714966)),
        Vector((-0.5713558197021484, 2.031099557876587, 2.031088352203369)),
        Vector((-8.815248975224677e-07, 2.070889711380005, 2.0708796977996826)),
        Vector((0.5713537931442261, 2.031099557876587, 2.031088352203369)),
        Vector((1.120751142501831, 1.9132534265518188, 1.9132434129714966)),
        Vector((1.6270792484283447, 1.721882939338684, 1.7218732833862305)),
        Vector((2.0708792209625244, 1.4643423557281494, 1.4643325805664062)),
        Vector((2.435096263885498, 1.1505277156829834, 1.1505179405212402)),
        Vector((2.705733299255371, 0.7925001382827759, 0.7924903631210327)),
        Vector((2.8723907470703125, 0.40401703119277954, 0.4040071964263916)),
        Vector((2.928664207458496, 8.358223567483947e-06, -1.7178194866573904e-06)),
        Vector((2.8723907470703125, -0.40400031208992004, -0.4040103852748871)),
        Vector((2.7057313919067383, -0.7924830317497253, -0.7924932837486267)),
        Vector((2.4350926876068115, -1.150510311126709, -1.150521159172058)),
        Vector((2.0708746910095215, -1.464323878288269, -1.4643350839614868)),
        Vector((1.6270743608474731, -1.7218633890151978, -1.7218753099441528)),
        Vector((1.120746374130249, -1.9132336378097534, -1.9132444858551025)),
        Vector((0.5713481307029724, -2.0310776233673096, -2.0310885906219482)),
        Vector((-1.8035277662420413e-06, 2.928673028945923, 5.307151340616656e-08)),
        Vector((-0.4040103256702423, 2.8724000453948975, 0.40400856733322144)),
        Vector((-0.792493462562561, 2.7057409286499023, 0.7924914360046387)),
        Vector((-1.1505208015441895, 2.435103416442871, 1.1505190134048462)),
        Vector((-1.4643349647521973, 2.0708866119384766, 1.4643330574035645)),
        Vector((-1.7218749523162842, 1.6270872354507446, 1.721873164176941)),
        Vector((-1.913245439529419, 1.1207597255706787, 1.9132434129714966)),
        Vector((-2.031090497970581, 0.5713623762130737, 2.031088352203369)),
        Vector((-2.0708816051483154, 7.892330359027255e-06, 2.0708796977996826)),
        Vector((-2.031090497970581, -0.5713462233543396, 2.031088352203369)),
        Vector((-1.913245439529419, -1.120743751525879, 1.9132434129714966)),
        Vector((-1.7218749523162842, -1.6270725727081299, 1.721873164176941)),
        Vector((-1.4643349647521973, -2.0708718299865723, 1.4643330574035645)),
        Vector((-1.1505208015441895, -2.435088872909546, 1.1505184173583984)),
        Vector((-0.7924929261207581, -2.7057273387908936, 0.7924911379814148)),
        Vector((-0.40400993824005127, -2.872385263442993, 0.404008150100708)),
        Vector((-1.128749431700271e-06, -2.9286582469940186, -6.217068744263088e-07)),
        Vector((0.40400776267051697, -2.872385263442993, -0.4040094017982483)),
        Vector((0.7924904823303223, -2.705726146697998, -0.7924922704696655)),
        Vector((1.1505182981491089, -2.435088872909546, -1.1505200862884521)),
        Vector((1.4643324613571167, -2.070870876312256, -1.46433424949646)),
        Vector((1.7218724489212036, -1.6270697116851807, -1.7218742370605469)),
        Vector((1.9132416248321533, -1.1207420825958252, -1.9132436513900757)),
        Vector((2.0310866832733154, -0.5713443160057068, -2.031087636947632)),
        Vector((2.070878028869629, 1.049913862516405e-05, -2.0708799362182617)),
        Vector((2.0310866832733154, 0.5713647603988647, -2.031087636947632)),
        Vector((1.9132405519485474, 1.1207629442214966, -1.9132425785064697)),
        Vector((1.7218704223632812, 1.6270899772644043, -1.7218722105026245)),
        Vector((1.4643291234970093, 2.070889949798584, -1.4643309116363525)),
        Vector((1.150515079498291, 2.4351067543029785, -1.1505168676376343)),
        Vector((0.7924866676330566, 2.7057442665100098, -0.7924884557723999)),
        Vector((0.40400373935699463, 2.8724000453948975, -0.40400534868240356)),
        Vector((-2.2113267732493114e-06, 2.928673028945923, -1.4221322430785222e-07)),
        Vector((0.40400615334510803, 2.8724000453948975, 0.4040084481239319)),
        Vector((0.7924891114234924, 2.7057409286499023, 0.7924914360046387)),
        Vector((1.1505167484283447, 2.435103416442871, 1.1505190134048462)),
        Vector((1.464330792427063, 2.0708866119384766, 1.4643330574035645)),
        Vector((1.7218713760375977, 1.6270872354507446, 1.721873164176941)),
        Vector((1.9132407903671265, 1.1207597255706787, 1.9132434129714966)),
        Vector((2.031085729598999, 0.5713623762130737, 2.0310885906219482)),
        Vector((2.0708770751953125, 7.892330359027255e-06, 2.0708796977996826)),
        Vector((2.031085729598999, -0.5713462233543396, 2.0310885906219482)),
        Vector((1.9132407903671265, -1.120743751525879, 1.9132434129714966)),
        Vector((1.7218713760375977, -1.6270725727081299, 1.721873164176941)),
        Vector((1.464330792427063, -2.0708718299865723, 1.4643330574035645)),
        Vector((1.1505167484283447, -2.435088872909546, 1.1505190134048462)),
        Vector((0.7924888730049133, -2.7057273387908936, 0.7924911379814148)),
        Vector((0.40400588512420654, -2.872385263442993, 0.40400803089141846)),
        Vector((-2.8861054488515947e-06, -2.9286582469940186, -8.169916441147507e-07)),
        Vector((-0.40401166677474976, -2.872385263442993, -0.4040098190307617)),
        Vector((-0.7924942374229431, -2.705726146697998, -0.7924922704696655)),
        Vector((-1.1505223512649536, -2.435088872909546, -1.1505200862884521)),
        Vector((-1.4643359184265137, -2.070870876312256, -1.4643346071243286)),
        Vector((-1.7218759059906006, -1.6270697116851807, -1.7218742370605469)),
        Vector((-1.9132462739944458, -1.1207420825958252, -1.9132444858551025)),
        Vector((-2.031090259552002, -0.5713443160057068, -2.0310885906219482)),
        Vector((-2.0708816051483154, 1.049913862516405e-05, -2.0708796977996826)),
        Vector((-2.031090259552002, 0.5713647603988647, -2.0310885906219482)),
        Vector((-1.9132441282272339, 1.1207629442214966, -1.9132423400878906)),
        Vector((-1.7218738794326782, 1.6270899772644043, -1.721873164176941)),
        Vector((-1.4643325805664062, 2.070889949798584, -1.4643313884735107)),
        Vector((-1.1505186557769775, 2.4351067543029785, -1.1505168676376343)),
        Vector((-0.7924907803535461, 2.7057442665100098, -0.7924887537956238)),
        Vector((-0.4040076434612274, 2.8724000453948975, -0.40400561690330505)),
    ]
    edges = [
        [1, 0],
        [2, 1],
        [3, 2],
        [4, 3],
        [5, 4],
        [6, 5],
        [7, 6],
        [8, 7],
        [9, 8],
        [10, 9],
        [11, 10],
        [12, 11],
        [13, 12],
        [14, 13],
        [15, 14],
        [16, 15],
        [17, 16],
        [18, 17],
        [19, 18],
        [20, 19],
        [21, 20],
        [22, 21],
        [23, 22],
        [24, 23],
        [25, 24],
        [26, 25],
        [27, 26],
        [28, 27],
        [29, 28],
        [30, 29],
        [31, 30],
        [0, 31],
        [33, 32],
        [34, 33],
        [35, 34],
        [36, 35],
        [37, 36],
        [38, 37],
        [39, 38],
        [40, 39],
        [41, 40],
        [42, 41],
        [43, 42],
        [44, 43],
        [45, 44],
        [46, 45],
        [47, 46],
        [48, 47],
        [49, 48],
        [50, 49],
        [51, 50],
        [52, 51],
        [53, 52],
        [54, 53],
        [55, 54],
        [56, 55],
        [57, 56],
        [58, 57],
        [59, 58],
        [60, 59],
        [61, 60],
        [62, 61],
        [63, 62],
        [32, 63],
        [65, 64],
        [66, 65],
        [67, 66],
        [68, 67],
        [69, 68],
        [70, 69],
        [71, 70],
        [72, 71],
        [73, 72],
        [74, 73],
        [75, 74],
        [76, 75],
        [77, 76],
        [78, 77],
        [79, 78],
        [80, 79],
        [81, 80],
        [82, 81],
        [83, 82],
        [84, 83],
        [85, 84],
        [86, 85],
        [87, 86],
        [88, 87],
        [89, 88],
        [90, 89],
        [91, 90],
        [92, 91],
        [93, 92],
        [94, 93],
        [95, 94],
        [64, 95],
        [127, 96],
        [97, 98],
        [98, 99],
        [99, 100],
        [100, 101],
        [101, 102],
        [102, 103],
        [103, 104],
        [104, 105],
        [105, 106],
        [106, 107],
        [107, 108],
        [108, 109],
        [109, 110],
        [110, 111],
        [111, 112],
        [112, 113],
        [113, 114],
        [114, 115],
        [115, 116],
        [116, 117],
        [117, 118],
        [118, 119],
        [119, 120],
        [120, 121],
        [121, 122],
        [122, 123],
        [123, 124],
        [124, 125],
        [125, 126],
        [126, 127],
        [96, 97],
        [129, 128],
        [130, 129],
        [131, 130],
        [132, 131],
        [133, 132],
        [134, 133],
        [135, 134],
        [136, 135],
        [137, 136],
        [138, 137],
        [139, 138],
        [140, 139],
        [141, 140],
        [142, 141],
        [143, 142],
        [144, 143],
        [145, 144],
        [146, 145],
        [147, 146],
        [148, 147],
        [149, 148],
        [150, 149],
        [151, 150],
        [152, 151],
        [153, 152],
        [154, 153],
        [155, 154],
        [156, 155],
        [157, 156],
        [158, 157],
        [159, 158],
        [128, 159],
        [161, 160],
        [162, 161],
        [163, 162],
        [164, 163],
        [165, 164],
        [166, 165],
        [167, 166],
        [168, 167],
        [169, 168],
        [170, 169],
        [171, 170],
        [172, 171],
        [173, 172],
        [174, 173],
        [175, 174],
        [176, 175],
        [177, 176],
        [178, 177],
        [179, 178],
        [180, 179],
        [181, 180],
        [182, 181],
        [183, 182],
        [184, 183],
        [185, 184],
        [186, 185],
        [187, 186],
        [188, 187],
        [189, 188],
        [190, 189],
        [191, 190],
        [160, 191],
        [193, 192],
        [194, 193],
        [195, 194],
        [196, 195],
        [197, 196],
        [198, 197],
        [199, 198],
        [200, 199],
        [201, 200],
        [202, 201],
        [203, 202],
        [204, 203],
        [205, 204],
        [206, 205],
        [207, 206],
        [208, 207],
        [209, 208],
        [210, 209],
        [211, 210],
        [212, 211],
        [213, 212],
        [214, 213],
        [215, 214],
        [216, 215],
        [217, 216],
        [218, 217],
        [219, 218],
        [220, 219],
        [221, 220],
        [222, 221],
        [223, 222],
        [192, 223],
        [225, 224],
        [226, 225],
        [227, 226],
        [228, 227],
        [229, 228],
        [230, 229],
        [231, 230],
        [232, 231],
        [233, 232],
        [234, 233],
        [235, 234],
        [236, 235],
        [237, 236],
        [238, 237],
        [239, 238],
        [240, 239],
        [241, 240],
        [242, 241],
        [243, 242],
        [244, 243],
        [245, 244],
        [246, 245],
        [247, 246],
        [248, 247],
        [249, 248],
        [250, 249],
        [251, 250],
        [252, 251],
        [253, 252],
        [254, 253],
        [255, 254],
        [224, 255],
        [257, 256],
        [258, 257],
        [259, 258],
        [260, 259],
        [261, 260],
        [262, 261],
        [263, 262],
        [264, 263],
        [265, 264],
        [266, 265],
        [267, 266],
        [268, 267],
        [269, 268],
        [270, 269],
        [271, 270],
        [272, 271],
        [273, 272],
        [274, 273],
        [275, 274],
        [276, 275],
        [277, 276],
        [278, 277],
        [279, 278],
        [280, 279],
        [281, 280],
        [282, 281],
        [283, 282],
        [284, 283],
        [285, 284],
        [286, 285],
        [287, 286],
        [256, 287],
    ]
    faces = []

    mesh = bpy.data.meshes.new(name="WGT_sphere_high")
    mesh.from_pydata(verts, edges, faces)
    # useful for development when the mesh may be invalid.
    # mesh.validate(verbose=True)
    object_data_add(context, mesh, operator=self)


def add_wgt_arrow_thick(self, context):

    verts = [
        Vector((6.132270812988281, 4.846922397613525, 0.0)),
        Vector((11.400272369384766, 4.846922397613525, 0.0)),
        Vector((6.132274627685547, -10.142858505249023, 0.0)),
        Vector((-6.132274627685547, 4.846922397613525, 0.0)),
        Vector((-11.400276184082031, 4.846922397613525, 0.0)),
        Vector((-3.814697265625e-06, 14.89802360534668, 0.0)),
        Vector((-6.132270812988281, -10.142858505249023, 0.0)),
    ]
    edges = [[5, 1], [0, 1], [3, 6], [5, 4], [3, 4], [6, 2], [0, 2]]
    faces = []

    mesh = bpy.data.meshes.new(name="WGT_arrow_thick")
    mesh.from_pydata(verts, edges, faces)
    object_data_add(context, mesh, operator=self)


def add_wgt_arrow_thin(self, context):

    verts = [
        Vector((5.84403133392334, 7.282532215118408, 0.0)),
        Vector((-5.8440351486206055, 7.282531261444092, 0.0)),
        Vector((-2.1678695247828728e-06, 12.4349365234375, 0.0)),
        Vector((2.167869752156548e-06, -10.0, 0.0)),
    ]
    edges = [[2, 0], [2, 3], [2, 1]]
    faces = []

    mesh = bpy.data.meshes.new(name="WGT_arrow_thin")
    mesh.from_pydata(verts, edges, faces)
    object_data_add(context, mesh, operator=self)


def add_wgt_properties(self, context):

    verts = [
        Vector((-6.653443813323975, 7.2209906578063965, 0.0)),
        Vector((-6.653443813323975, -15.587015151977539, 0.0)),
        Vector((-3.3760461807250977, -15.587015151977539, 0.0)),
        Vector((-3.3760461807250977, -5.721382141113281, 0.0)),
        Vector((0.03512120246887207, -5.721382141113281, 0.0)),
        Vector((1.2964653968811035, -5.664037227630615, 0.0)),
        Vector((2.439598560333252, -5.496726989746094, 0.0)),
        Vector((3.4661455154418945, -5.226532459259033, 0.0)),
        Vector((4.37773323059082, -4.860538959503174, 0.0)),
        Vector((5.1759867668151855, -4.40582799911499, 0.0)),
        Vector((5.862532138824463, -3.869485378265381, 0.0)),
        Vector((6.43899393081665, -3.258592128753662, 0.0)),
        Vector((6.906999111175537, -2.580233097076416, 0.0)),
        Vector((7.268174648284912, -1.8414912223815918, 0.0)),
        Vector((7.524142742156982, -1.0494496822357178, 0.0)),
        Vector((7.67653226852417, -0.21119225025177002, 0.0)),
        Vector((7.726970195770264, 0.6661975979804993, 0.0)),
        Vector((7.679341793060303, 1.5539040565490723, 0.0)),
        Vector((7.535447597503662, 2.4058446884155273, 0.0)),
        Vector((7.293781757354736, 3.214123249053955, 0.0)),
        Vector((6.952830791473389, 3.97084379196167, 0.0)),
        Vector((6.511088848114014, 4.668110370635986, 0.0)),
        Vector((5.967043399810791, 5.298027992248535, 0.0)),
        Vector((5.319185256958008, 5.852698802947998, 0.0)),
        Vector((4.566005706787109, 6.324227333068848, 0.0)),
        Vector((3.7059950828552246, 6.704717636108398, 0.0)),
        Vector((2.7376437187194824, 6.98627233505249, 0.0)),
        Vector((1.6594421863555908, 7.160994529724121, 0.0)),
        Vector((0.4698784351348877, 7.2209906578063965, 0.0)),
        Vector((-3.3760461807250977, 4.278022766113281, 0.0)),
        Vector((0.4698784351348877, 4.278022766113281, 0.0)),
        Vector((1.171461582183838, 4.241522312164307, 0.0)),
        Vector((1.790714979171753, 4.136510848999023, 0.0)),
        Vector((2.331702470779419, 3.969721794128418, 0.0)),
        Vector((2.798489570617676, 3.747891902923584, 0.0)),
        Vector((3.195138931274414, 3.477755069732666, 0.0)),
        Vector((3.5257158279418945, 3.1660475730895996, 0.0)),
        Vector((3.7942843437194824, 2.8195042610168457, 0.0)),
        Vector((4.004908561706543, 2.4448585510253906, 0.0)),
        Vector((4.161652088165283, 2.0488481521606445, 0.0)),
        Vector((4.268580436706543, 1.6382067203521729, 0.0)),
        Vector((4.329756259918213, 1.2196674346923828, 0.0)),
        Vector((4.349245071411133, 0.7999680638313293, 0.0)),
        Vector((4.316905498504639, 0.25183844566345215, 0.0)),
        Vector((4.221511363983154, -0.254720002412796, 0.0)),
        Vector((4.065503120422363, -0.7185460925102234, 0.0)),
        Vector((3.851317882537842, -1.1384774446487427, 0.0)),
        Vector((3.581394672393799, -1.5133543014526367, 0.0)),
        Vector((3.2581725120544434, -1.8420155048370361, 0.0)),
        Vector((2.8840889930725098, -2.1232986450195312, 0.0)),
        Vector((2.461583137512207, -2.356044292449951, 0.0)),
        Vector((1.993093490600586, -2.5390892028808594, 0.0)),
        Vector((1.4810585975646973, -2.6712732315063477, 0.0)),
        Vector((0.9279165267944336, -2.7514357566833496, 0.0)),
        Vector((0.3361067771911621, -2.7784132957458496, 0.0)),
        Vector((-3.3760461807250977, -2.7784132957458496, 0.0)),
    ]
    edges = [
        [0, 1],
        [0, 28],
        [27, 28],
        [26, 27],
        [25, 26],
        [24, 25],
        [23, 24],
        [22, 23],
        [21, 22],
        [29, 30],
        [20, 21],
        [29, 55],
        [30, 31],
        [31, 32],
        [32, 33],
        [19, 20],
        [33, 34],
        [34, 35],
        [35, 36],
        [18, 19],
        [36, 37],
        [37, 38],
        [38, 39],
        [17, 18],
        [39, 40],
        [40, 41],
        [16, 17],
        [41, 42],
        [42, 43],
        [15, 16],
        [43, 44],
        [14, 15],
        [44, 45],
        [45, 46],
        [13, 14],
        [46, 47],
        [47, 48],
        [12, 13],
        [48, 49],
        [49, 50],
        [50, 51],
        [51, 52],
        [11, 12],
        [52, 53],
        [53, 54],
        [54, 55],
        [10, 11],
        [9, 10],
        [8, 9],
        [7, 8],
        [6, 7],
        [5, 6],
        [3, 4],
        [4, 5],
        [1, 2],
        [2, 3],
    ]
    faces = []

    mesh = bpy.data.meshes.new(name="WGT_properties")
    mesh.from_pydata(verts, edges, faces)
    # useful for development when the mesh may be invalid.
    # mesh.validate(verbose=True)
    object_data_add(context, mesh, operator=self)


def add_wgt_upperbody(self, context):

    verts = [
        Vector((4.121308326721191, -16.783843994140625, 9.633283615112305)),
        Vector((8.084237098693848, -15.81003189086914, 6.504880905151367)),
        Vector((11.736495971679688, -14.22864818572998, 3.4773952960968018)),
        Vector((14.937728881835938, -12.1004638671875, 1.7207131385803223)),
        Vector((17.564916610717773, -9.507271766662598, 1.580647349357605)),
        Vector((19.517086029052734, -6.548709869384766, 1.5806469917297363)),
        Vector((20.71923065185547, -3.3384850025177, 1.5806469917297363)),
        Vector((21.125154495239258, 3.874590038321912e-05, 1.5806469917297363)),
        Vector((20.71923065185547, 3.3385603427886963, 1.5806467533111572)),
        Vector((19.517086029052734, 6.548783302307129, 1.5806469917297363)),
        Vector((17.564916610717773, 9.50735092163086, 1.5806466341018677)),
        Vector((14.937728881835938, 12.100539207458496, 1.7207117080688477)),
        Vector((11.736495971679688, 14.228728294372559, 3.4773952960968018)),
        Vector((8.084237098693848, 15.810110092163086, 6.009952545166016)),
        Vector((4.121302604675293, 16.783920288085938, 8.597942352294922)),
        Vector((0.0, -17.1126708984375, 10.529915809631348)),
        Vector((-4.121308326721191, -16.783843994140625, 9.633283615112305)),
        Vector((-8.084237098693848, -15.81003189086914, 6.504880905151367)),
        Vector((-11.736495971679688, -14.22864818572998, 3.4773952960968018)),
        Vector((-14.937728881835938, -12.1004638671875, 1.7207131385803223)),
        Vector((-17.564916610717773, -9.507271766662598, 1.580647349357605)),
        Vector((-19.517086029052734, -6.548709869384766, 1.5806469917297363)),
        Vector((-20.71923065185547, -3.3384850025177, 1.5806469917297363)),
        Vector((-21.125154495239258, 3.874590038321912e-05, 1.5806469917297363)),
        Vector((-20.71923065185547, 3.3385603427886963, 1.5806467533111572)),
        Vector((-19.517086029052734, 6.548783302307129, 1.5806469917297363)),
        Vector((-17.564916610717773, 9.50735092163086, 1.5806466341018677)),
        Vector((-14.937728881835938, 12.100539207458496, 1.7207117080688477)),
        Vector((-11.736495971679688, 14.228728294372559, 3.4773952960968018)),
        Vector((-8.084237098693848, 15.810110092163086, 6.009952545166016)),
        Vector((-4.121302604675293, 16.783920288085938, 8.597942352294922)),
        Vector((0.0, 17.112747192382812, 9.427718162536621)),
    ]
    edges = [
        [0, 15],
        [1, 0],
        [2, 1],
        [3, 2],
        [4, 3],
        [5, 4],
        [6, 5],
        [7, 6],
        [8, 7],
        [9, 8],
        [10, 9],
        [11, 10],
        [12, 11],
        [13, 12],
        [14, 13],
        [31, 14],
        [16, 15],
        [17, 16],
        [18, 17],
        [19, 18],
        [20, 19],
        [21, 20],
        [22, 21],
        [23, 22],
        [24, 23],
        [25, 24],
        [26, 25],
        [27, 26],
        [28, 27],
        [29, 28],
        [30, 29],
        [31, 30],
    ]
    faces = []

    mesh = bpy.data.meshes.new(name="WGT_upperbody")
    mesh.from_pydata(verts, edges, faces)
    # useful for development when the mesh may be invalid.
    # mesh.validate(verbose=True)
    object_data_add(context, mesh, operator=self)


def add_wgt_lowerbody(self, context):

    verts = [
        Vector((4.121308326721191, -16.783843994140625, -7.634458065032959)),
        Vector((8.084237098693848, -15.81003189086914, -4.506054878234863)),
        Vector((11.736495971679688, -14.22864818572998, -1.478569507598877)),
        Vector((14.937728881835938, -12.1004638671875, 0.27811264991760254)),
        Vector((17.564916610717773, -9.507271766662598, 0.4181784391403198)),
        Vector((19.517086029052734, -6.548709869384766, 0.41817885637283325)),
        Vector((20.71923065185547, -3.3384850025177, 0.4181787371635437)),
        Vector((21.125154495239258, 3.874590038321912e-05, 0.41817885637283325)),
        Vector((20.71923065185547, 3.3385603427886963, 0.41817909479141235)),
        Vector((19.517086029052734, 6.548783302307129, 0.41817885637283325)),
        Vector((17.564916610717773, 9.50735092163086, 0.41817915439605713)),
        Vector((14.937728881835938, 12.100539207458496, 0.2781140208244324)),
        Vector((11.736495971679688, 14.228728294372559, -1.478569507598877)),
        Vector((8.084237098693848, 15.810110092163086, -4.01112699508667)),
        Vector((4.121302604675293, 16.783920288085938, -6.599116325378418)),
        Vector((0.0, -17.1126708984375, -8.531089782714844)),
        Vector((-4.121308326721191, -16.783843994140625, -7.634458065032959)),
        Vector((-8.084237098693848, -15.81003189086914, -4.506054878234863)),
        Vector((-11.736495971679688, -14.22864818572998, -1.478569507598877)),
        Vector((-14.937728881835938, -12.1004638671875, 0.27811264991760254)),
        Vector((-17.564916610717773, -9.507271766662598, 0.4181784391403198)),
        Vector((-19.517086029052734, -6.548709869384766, 0.41817885637283325)),
        Vector((-20.71923065185547, -3.3384850025177, 0.4181787371635437)),
        Vector((-21.125154495239258, 3.874590038321912e-05, 0.41817885637283325)),
        Vector((-20.71923065185547, 3.3385603427886963, 0.41817909479141235)),
        Vector((-19.517086029052734, 6.548783302307129, 0.41817885637283325)),
        Vector((-17.564916610717773, 9.50735092163086, 0.41817915439605713)),
        Vector((-14.937728881835938, 12.100539207458496, 0.2781140208244324)),
        Vector((-11.736495971679688, 14.228728294372559, -1.478569507598877)),
        Vector((-8.084237098693848, 15.810110092163086, -4.01112699508667)),
        Vector((-4.121302604675293, 16.783920288085938, -6.599116325378418)),
        Vector((0.0, 17.112747192382812, -7.428892135620117)),
    ]
    edges = [
        [0, 15],
        [1, 0],
        [2, 1],
        [3, 2],
        [4, 3],
        [5, 4],
        [6, 5],
        [7, 6],
        [8, 7],
        [9, 8],
        [10, 9],
        [11, 10],
        [12, 11],
        [13, 12],
        [14, 13],
        [31, 14],
        [16, 15],
        [17, 16],
        [18, 17],
        [19, 18],
        [20, 19],
        [21, 20],
        [22, 21],
        [23, 22],
        [24, 23],
        [25, 24],
        [26, 25],
        [27, 26],
        [28, 27],
        [29, 28],
        [30, 29],
        [31, 30],
    ]
    faces = []

    mesh = bpy.data.meshes.new(name="WGT_lowerbody")
    mesh.from_pydata(verts, edges, faces)
    # useful for development when the mesh may be invalid.
    # mesh.validate(verbose=True)
    object_data_add(context, mesh, operator=self)


def add_wgt_head(self, context):

    verts = [
        Vector((9.435954093933105, -11.323970794677734, -4.894071578979492)),
        Vector((16.770362854003906, -0.5005193948745728, 43.88422393798828)),
        Vector((12.973369598388672, 14.074051856994629, 10.262450218200684)),
        Vector((14.513922691345215, 22.1334228515625, 36.53810501098633)),
        Vector((12.774620056152344, 21.90909767150879, 25.00684356689453)),
        Vector((16.770362854003906, 13.42404842376709, 41.91524124145508)),
        Vector((-9.435954093933105, -11.323970794677734, -4.894071578979492)),
        Vector((-16.770362854003906, -0.5005193948745728, 43.88422393798828)),
        Vector((-12.973369598388672, 14.074051856994629, 10.262450218200684)),
        Vector((-14.513922691345215, 22.1334228515625, 36.53810501098633)),
        Vector((0.0, 14.074051856994629, 10.262450218200684)),
        Vector((0.0, 22.1334228515625, 36.53810501098633)),
        Vector((0.0, -11.323970794677734, -4.894071578979492)),
        Vector((0.0, -0.5005193948745728, 43.88422393798828)),
        Vector((-12.774620056152344, 21.90909767150879, 25.00684356689453)),
        Vector((-16.770362854003906, 13.42404842376709, 41.91524124145508)),
    ]
    edges = [
        [11, 3],
        [4, 2],
        [0, 2],
        [5, 1],
        [12, 0],
        [2, 10],
        [1, 13],
        [3, 4],
        [3, 5],
        [11, 9],
        [14, 8],
        [6, 8],
        [15, 7],
        [12, 6],
        [8, 10],
        [7, 13],
        [9, 14],
        [9, 15],
    ]
    faces = []

    mesh = bpy.data.meshes.new(name="WGT_head")
    mesh.from_pydata(verts, edges, faces)
    # useful for development when the mesh may be invalid.
    # mesh.validate(verbose=True)
    object_data_add(context, mesh, operator=self)


def add_wgt_jaw(self, context):

    verts = [
        Vector((-10.9227933883667, 1.4505760669708252, -5.441727638244629)),
        Vector((10.9227933883667, 1.4505832195281982, -5.4417266845703125)),
        Vector((-6.787637710571289, -13.43266487121582, -8.835026741027832)),
        Vector((6.787647247314453, -13.432661056518555, -8.835026741027832)),
        Vector((-15.65603256225586, 1.6337562799453735, -0.11545297503471375)),
        Vector((15.656030654907227, 1.633766531944275, -0.11545160412788391)),
        Vector((-11.094717025756836, -14.839982986450195, -3.508500814437866)),
        Vector((11.0947265625, -14.839975357055664, -3.50849986076355)),
    ]
    edges = [
        [2, 0],
        [1, 3],
        [3, 2],
        [6, 2],
        [3, 7],
        [7, 6],
        [4, 6],
        [7, 5],
        [0, 4],
        [5, 1],
    ]
    faces = []

    mesh = bpy.data.meshes.new(name="WGT_jaw")
    mesh.from_pydata(verts, edges, faces)
    # useful for development when the mesh may be invalid.
    # mesh.validate(verbose=True)
    object_data_add(context, mesh, operator=self)


def add_wgt_face(self, context):

    verts = [
        Vector((5.51010799407959, 7.176262378692627, 0.0)),
        Vector((-6.653677463531494, 7.176262378692627, 0.0)),
        Vector((-6.653677463531494, -15.614126205444336, 0.0)),
        Vector((-3.3788113594055176, -15.614126205444336, 0.0)),
        Vector((-3.3788113594055176, -5.020938873291016, 0.0)),
        Vector((5.51010799407959, -5.020938873291016, 0.0)),
        Vector((5.51010799407959, -2.0802431106567383, 0.0)),
        Vector((-3.3788113594055176, -2.0802431106567383, 0.0)),
        Vector((-3.3788113594055176, 4.235567569732666, 0.0)),
        Vector((5.51010799407959, 4.235567569732666, 0.0)),
    ]
    edges = [
        [1, 2],
        [0, 1],
        [8, 9],
        [0, 9],
        [7, 8],
        [6, 7],
        [4, 5],
        [5, 6],
        [2, 3],
        [3, 4],
    ]
    faces = []

    mesh = bpy.data.meshes.new(name="WGT_face")
    mesh.from_pydata(verts, edges, faces)
    # useful for development when the mesh may be invalid.
    # mesh.validate(verbose=True)
    object_data_add(context, mesh, operator=self)


def add_wgt_eye_all(self, context):

    verts = [
        Vector((5.9328765869140625, 3.3424053981434554e-05, 4.016552448272705)),
        Vector((5.149285793304443, 3.3424053981434554e-05, 3.9393727779388428)),
        Vector((4.395809650421143, 3.32001582137309e-05, 3.7108070850372314)),
        Vector((3.210275650024414, 3.32001582137309e-05, 3.0880956649780273)),
        Vector((2.263302803039551, 3.3424053981434554e-05, 2.0891361236572266)),
        Vector((1.365664005279541, 3.3424053981434554e-05, 1.3440731763839722)),
        Vector((1.365664005279541, 3.364795338711701e-05, -1.3440757989883423)),
        Vector((2.263302803039551, 3.364795338711701e-05, -2.089137077331543)),
        Vector((3.210275650024414, 3.364795338711701e-05, -3.0880985260009766)),
        Vector((4.395809650421143, 3.364795338711701e-05, -3.7108097076416016)),
        Vector((5.14928674697876, 3.3424053981434554e-05, -3.939373731613159)),
        Vector((5.932877540588379, 3.3424053981434554e-05, -4.0165534019470215)),
        Vector((6.71646785736084, 3.3424053981434554e-05, -3.939373731613159)),
        Vector((7.469942569732666, 3.364795338711701e-05, -3.7108097076416016)),
        Vector((8.164350509643555, 3.364795338711701e-05, -3.3396408557891846)),
        Vector((8.773006439208984, 3.364795338711701e-05, -2.8401296138763428)),
        Vector((9.272518157958984, 3.364795338711701e-05, -2.2314743995666504)),
        Vector((9.643686294555664, 3.353600186528638e-05, -1.5370655059814453)),
        Vector((9.872249603271484, 3.348002792336047e-05, -0.783588171005249)),
        Vector((9.949426651000977, 3.345204095239751e-05, 2.708572992560221e-06)),
        Vector((9.872245788574219, 3.3424053981434554e-05, 0.7835930585861206)),
        Vector((9.643680572509766, 3.3424053981434554e-05, 1.5370707511901855)),
        Vector((9.272512435913086, 3.3424053981434554e-05, 2.2314794063568115)),
        Vector((8.773004531860352, 3.3424053981434554e-05, 2.840132474899292)),
        Vector((8.164346694946289, 3.32001582137309e-05, 3.339641809463501)),
        Vector((7.469934940338135, 3.32001582137309e-05, 3.710810661315918)),
        Vector((6.716461181640625, 3.3424053981434554e-05, 3.939375877380371)),
        Vector((-5.9328765869140625, 3.3424053981434554e-05, 4.016552448272705)),
        Vector((-5.149285793304443, 3.3424053981434554e-05, 3.9393727779388428)),
        Vector((-4.395809650421143, 3.32001582137309e-05, 3.7108070850372314)),
        Vector((-3.210275650024414, 3.32001582137309e-05, 3.0880956649780273)),
        Vector((-2.263302803039551, 3.3424053981434554e-05, 2.0891361236572266)),
        Vector((-1.365664005279541, 3.3424053981434554e-05, 1.3440731763839722)),
        Vector((0.0, 3.3424053981434554e-05, 1.1222255229949951)),
        Vector((0.0, 3.348002792336047e-05, -1.1222267150878906)),
        Vector((-1.365664005279541, 3.364795338711701e-05, -1.3440757989883423)),
        Vector((-2.263302803039551, 3.364795338711701e-05, -2.089137077331543)),
        Vector((-3.210275650024414, 3.364795338711701e-05, -3.0880985260009766)),
        Vector((-4.395809650421143, 3.364795338711701e-05, -3.7108097076416016)),
        Vector((-5.14928674697876, 3.3424053981434554e-05, -3.939373731613159)),
        Vector((-5.932877540588379, 3.3424053981434554e-05, -4.0165534019470215)),
        Vector((-6.71646785736084, 3.3424053981434554e-05, -3.939373731613159)),
        Vector((-7.469942569732666, 3.364795338711701e-05, -3.7108097076416016)),
        Vector((-8.164350509643555, 3.364795338711701e-05, -3.3396408557891846)),
        Vector((-8.773006439208984, 3.364795338711701e-05, -2.8401296138763428)),
        Vector((-9.272518157958984, 3.364795338711701e-05, -2.2314743995666504)),
        Vector((-9.643686294555664, 3.353600186528638e-05, -1.5370655059814453)),
        Vector((-9.872249603271484, 3.348002792336047e-05, -0.783588171005249)),
        Vector((-9.949426651000977, 3.345204095239751e-05, 2.708572992560221e-06)),
        Vector((-9.872245788574219, 3.3424053981434554e-05, 0.7835930585861206)),
        Vector((-9.643680572509766, 3.3424053981434554e-05, 1.5370707511901855)),
        Vector((-9.272512435913086, 3.3424053981434554e-05, 2.2314794063568115)),
        Vector((-8.773004531860352, 3.3424053981434554e-05, 2.840132474899292)),
        Vector((-8.164346694946289, 3.32001582137309e-05, 3.339641809463501)),
        Vector((-7.469934940338135, 3.32001582137309e-05, 3.710810661315918)),
        Vector((-6.716461181640625, 3.3424053981434554e-05, 3.939375877380371)),
    ]
    edges = [
        [1, 0],
        [2, 1],
        [3, 2],
        [4, 3],
        [5, 4],
        [33, 5],
        [6, 34],
        [7, 6],
        [8, 7],
        [9, 8],
        [10, 9],
        [11, 10],
        [12, 11],
        [13, 12],
        [14, 13],
        [15, 14],
        [16, 15],
        [17, 16],
        [18, 17],
        [19, 18],
        [20, 19],
        [21, 20],
        [22, 21],
        [23, 22],
        [24, 23],
        [25, 24],
        [26, 25],
        [0, 26],
        [28, 27],
        [29, 28],
        [30, 29],
        [31, 30],
        [32, 31],
        [33, 32],
        [35, 34],
        [36, 35],
        [37, 36],
        [38, 37],
        [39, 38],
        [40, 39],
        [41, 40],
        [42, 41],
        [43, 42],
        [44, 43],
        [45, 44],
        [46, 45],
        [47, 46],
        [48, 47],
        [49, 48],
        [50, 49],
        [51, 50],
        [52, 51],
        [53, 52],
        [54, 53],
        [55, 54],
        [27, 55],
    ]
    faces = []

    mesh = bpy.data.meshes.new(name="WGT_eye_all")
    mesh.from_pydata(verts, edges, faces)
    # useful for development when the mesh may be invalid.
    # mesh.validate(verbose=True)
    object_data_add(context, mesh, operator=self)


def add_wgt_foot(self, context):

    verts = [
        Vector((-9.583839416503906, -34.44625473022461, 0.0)),
        Vector((9.583852767944336, -34.44625473022461, 0.0)),
        Vector((-9.583839416503906, 0.5512939691543579, 0.0)),
        Vector((9.583852767944336, 0.5512939691543579, 0.0)),
        Vector((-8.046627044677734e-07, -4.372053146362305, -2.1435525923152454e-06)),
        Vector((-7.152557373046875e-07, -4.2774529457092285, -0.9605069756507874)),
        Vector((-7.152557373046875e-07, -3.9972829818725586, -1.884100317955017)),
        Vector((-5.066394805908203e-07, -3.542314052581787, -2.735288619995117)),
        Vector((-3.5762786865234375e-07, -2.9300265312194824, -3.481360673904419)),
        Vector((-3.5762786865234375e-07, -2.183955192565918, -4.0936455726623535)),
        Vector((-3.5762786865234375e-07, -1.332767128944397, -4.548614501953125)),
        Vector((-3.5762786865234375e-07, -0.40917420387268066, -4.828784942626953)),
        Vector((-3.5762786865234375e-07, 0.5513298511505127, -4.923386573791504)),
        Vector((-3.5762786865234375e-07, 1.5118341445922852, -4.828784942626953)),
        Vector((-3.5762786865234375e-07, 2.4354264736175537, -4.548616886138916)),
        Vector((-3.5762786865234375e-07, 3.286614418029785, -4.0936455726623535)),
        Vector((-3.5762786865234375e-07, 4.032689094543457, -3.481360673904419)),
        Vector((-5.066394805908203e-07, 4.6449737548828125, -2.7352867126464844)),
        Vector((-7.152557373046875e-07, 5.099944114685059, -1.8840986490249634)),
        Vector((-7.152557373046875e-07, 5.380112648010254, -0.9605053663253784)),
        Vector((-8.046627044677734e-07, 5.4747138023376465, -5.39310121894232e-07)),
        Vector((-8.344650268554688e-07, 5.380112648010254, 0.9605043530464172)),
        Vector((-9.5367431640625e-07, 5.099942207336426, 1.884096622467041)),
        Vector((-9.5367431640625e-07, 4.644972324371338, 2.7352850437164307)),
        Vector((-1.0728836059570312e-06, 4.032686710357666, 3.4813575744628906)),
        Vector((-1.0728836059570312e-06, 3.286611557006836, 4.093645095825195)),
        Vector((-1.0728836059570312e-06, 2.4354238510131836, 4.548612117767334)),
        Vector((-1.0728836059570312e-06, 1.51183021068573, 4.828780174255371)),
        Vector((-1.0728836059570312e-06, 0.5513255000114441, 4.923380374908447)),
        Vector((-1.0728836059570312e-06, -0.4091793894767761, 4.828780174255371)),
        Vector((-1.0728836059570312e-06, -1.3327727317810059, 4.54860782623291)),
        Vector((-1.0728836059570312e-06, -2.1839590072631836, 4.0936384201049805)),
        Vector((-1.0728836059570312e-06, -2.9300336837768555, 3.481353282928467)),
        Vector((-9.5367431640625e-07, -3.542316436767578, 2.735278367996216)),
        Vector((-9.5367431640625e-07, -3.9972848892211914, 1.8840879201889038)),
        Vector((-8.344650268554688e-07, -4.2774529457092285, 0.9604950547218323)),
    ]
    edges = [
        [2, 0],
        [0, 1],
        [1, 3],
        [3, 2],
        [5, 4],
        [6, 5],
        [7, 6],
        [8, 7],
        [9, 8],
        [10, 9],
        [11, 10],
        [12, 11],
        [13, 12],
        [14, 13],
        [15, 14],
        [16, 15],
        [17, 16],
        [18, 17],
        [19, 18],
        [20, 19],
        [21, 20],
        [22, 21],
        [23, 22],
        [24, 23],
        [25, 24],
        [26, 25],
        [27, 26],
        [28, 27],
        [29, 28],
        [30, 29],
        [31, 30],
        [32, 31],
        [33, 32],
        [34, 33],
        [35, 34],
        [4, 35],
    ]
    faces = []

    mesh = bpy.data.meshes.new(name="WGT_foot")
    mesh.from_pydata(verts, edges, faces)
    # useful for development when the mesh may be invalid.
    # mesh.validate(verbose=True)
    object_data_add(context, mesh, operator=self)


def add_wgt_clav(self, context):

    verts = [
        Vector((-4.609792232513428, 1.009042739868164, -4.529855728149414)),
        Vector((-4.609792232513428, 1.009042739868164, 2.1604719161987305)),
        Vector((-3.8376662731170654, 11.4600191116333, -4.791999816894531)),
        Vector((-3.8376662731170654, 11.4600191116333, 0.7777185440063477)),
        Vector((4.609792232513428, 1.009042739868164, -4.529855728149414)),
        Vector((4.609792232513428, 1.009042739868164, 2.1604719161987305)),
        Vector((3.8376662731170654, 11.4600191116333, -4.791999816894531)),
        Vector((3.8376662731170654, 11.4600191116333, 0.7777185440063477)),
    ]
    edges = [
        [2, 0],
        [0, 1],
        [1, 3],
        [3, 2],
        [6, 2],
        [7, 6],
        [4, 6],
        [7, 5],
        [5, 4],
        [0, 4],
    ]
    faces = []

    mesh = bpy.data.meshes.new(name="WGT_clav")
    mesh.from_pydata(verts, edges, faces)
    # useful for development when the mesh may be invalid.
    # mesh.validate(verbose=True)
    object_data_add(context, mesh, operator=self)


def add_wgt_2dsquare(self, context):
    # go to object mode
    bpy.ops.object.mode_set(mode="OBJECT")
    # create widget for CTL custom shape
    bpy.ops.mesh.primitive_plane_add(
        size=20, location=(0, -15, 0), rotation=(radians(90), 0, 0)
    )
    # identify widget
    mesh = bpy.context.view_layer.objects.active
    # change its name
    mesh.name = "WGT_2dsquare"
    # apply/freeze transforms
    bpy.ops.object.transform_apply(location=True, rotation=True, scale=True)
    # go to edit mode
    bpy.ops.object.mode_set(mode="EDIT")
    # delete only faces
    bpy.ops.mesh.delete(type="ONLY_FACE")
    # go to object mode
    bpy.ops.object.mode_set(mode="OBJECT")
